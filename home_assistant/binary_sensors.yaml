- platform: template
  sensors:
    pieter_present:
      friendly_name: "Pieter Present"
      value_template: >-
        {{ is_state("input_boolean.pieter_present", "on") or
           is_state("person.pieter_rautenbach", "home") }}
    rouve_present:
      friendly_name: "RouvÃ© Present"
      value_template: >-
        {{ is_state("input_boolean.rouve_present", "on") or
           is_state("person.rouve_rautenbach", "home") }}
    contractor_mode:
      friendly_name: "Contractor Mode"
      value_template: >-
        {{ is_state("input_boolean.contractor_mode", "on") }}
    anybody_home:
      friendly_name: "Anybody Home"
      value_template: >-
        {{ is_state("input_boolean.pieter_present", "on") or is_state("input_boolean.rouve_present", "on") or
           is_state("input_boolean.guest_mode", "on") or is_state("input_boolean.contractor_mode", "on") }}
      icon_template: >-
        {% if is_state("input_boolean.pieter_present", "on") or is_state("input_boolean.rouve_present", "on") or
              is_state("input_boolean.guest_mode", "on") or is_state("input_boolean.contractor_mode", "on") %}
          mdi:home-account
        {% else %}
          mdi:home
        {% endif %}
    pieter_driving:
      friendly_name: "Pieter Driving"
      value_template: >-
        {{ is_state("input_boolean.pieter_driving", "on") }}
    electricity_feed:
      friendly_name: "Electricity"
      # https://www.home-assistant.io/integrations/binary_sensor/#device-class
      device_class: power
      value_template: >-
        {{ state_attr('sensor.home_assistant_server_battery', 'status') != 'Discharging' }}
      icon_template: >-
        {% if state_attr('sensor.home_assistant_server_battery', 'status') == 'Discharging' %}
          mdi:power-plug-off
        {% else %}
          mdi:power-plug
        {% endif %}
    internet_connection:
      friendly_name: "Internet"
      device_class: connectivity
      value_template: >-
        {{ is_state('binary_sensor.internet', 'on') }}
      icon_template: >-
        {% if is_state('binary_sensor.internet', 'on') %}
          mdi:server-network
        {% else %}
          mdi:server-network-off
        {% endif %}
    motion_detected:
      friendly_name: "Motion Detector"
      device_class: motion
      # motion_sensor_3 is the occupancy sensor and not the raw motion sensor and is delayed in the homebridge config by 5 sec
      value_template: >-
        {{ is_state('binary_sensor.motion_sensor_3', 'on') }}
      icon_template: >-
        {% if is_state('binary_sensor.motion_sensor_3', 'on') %}
          mdi:motion-sensor
        {% else %}
          mdi:walk
        {% endif %}
    no_recent_backup:
      friendly_name: "Recent Backup Problem"
      device_class: problem
      # get the last file, extract the date and compare
      value_template: >-
        {% set last_backup = strptime(states('sensor.last_backup'), "%Y-%m-%dT%H:%M:%S%z") %}
        {{ 'on' if ((states('sensor.last_backup') == 'unknown') or ((now() - last_backup).days > 4)) else 'off' }}
      icon_template: >-
        {{ state_attr('sensor.last_backup', 'icon') }}
    golden_hour:
      # https://community.home-assistant.io/t/wth-is-there-no-golden-hour-data-available-to-trigger-light-automations/220359/3
      friendly_name: Golden Hour
      value_template: >
        {{ -4 < state_attr('sun.sun','elevation') | float < 6 }}
      icon_template: mdi:weather-sunset
    hacs_updater:
      friendly_name: HACS Updater
      value_template: >
       {{ states('sensor.hacs') | int > 0 }}
    ha_breaking_changes:
      friendly_name: HA Breaking Changes
      value_template: >
        {{ states('sensor.potential_breaking_changes') | int > 0 }}

# https://github.com/home-assistant/core/issues/43188
# https://github.com/home-assistant/core/pull/43869
- platform: command_line
  name: CCTV
  command: 'ping -n -q -W 1 -c 1 securitypi.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Thor
  command: 'ping -n -q -W 1 -c 1 thor.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Rasplay
  command: 'ping -n -q -W 1 -c 1 rasplay.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Rasplex
  command: 'ping -n -q -W 1 -c 1 rasplex.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Main Gate
  command: 'ping -n -q -W 1 -c 1 main_gate.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Garage Doors
  command: 'ping -n -q -W 1 -c 1 garage_doors.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Power Meter
  command: 'ping -n -q -W 1 -c 1 electricity_pulse_counter.local > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Home Extender
  command: 'ping -n -q -W 1 -c 1 home_extender > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: command_line
  name: Garage Extender
  command: 'ping -n -q -W 1 -c 1 garage_extender > /dev/null 2>&1 && echo success || echo fail'
  device_class: connectivity
  payload_on: "success"
  payload_off: "fail"
  scan_interval: 30

- platform: ping
  name: Internet
  host: www.google.com
  count: 5
  scan_interval: 180
