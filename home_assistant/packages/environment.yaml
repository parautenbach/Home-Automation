weather:
  # https://community.home-assistant.io/t/mapping-weather-conditions-in-the-ui/289207
  - platform: template
    name: "Forecast Tomorrow"
    condition_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1]['condition'] }}"
    temperature_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1]['temperature'] }}"
    temperature_unit: "°C"
    # workaround: https://github.com/home-assistant/core/issues/91620
    humidity_template: "{{ 0.0 | float(0) }}"
    pressure_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1]['pressure'] }}"
    pressure_unit: "hPa"
    wind_speed_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1]['wind_speed'] }}"
    wind_speed_unit: "km/h"
    wind_bearing_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1]['wind_bearing'] }}"
    precipitation_unit: "mm"
    # forecast_template: "{{ state_attr('weather.openweathermap_daily', 'forecast')[1:] }}"
    attribution_template: "{{ state_attr('weather.openweathermap_daily', 'attribution') }}"

binary_sensor:
  - platform: template
    sensors:
      golden_hour:
        # https://community.home-assistant.io/t/wth-is-there-no-golden-hour-data-available-to-trigger-light-automations/220359/3
        friendly_name: Golden Hour
        value_template: >
          {{ -4 < state_attr('sun.sun','elevation') | float < 6 }}
        icon_template: mdi:weather-sunset
      low_light:
        friendly_name: Low Light
        # alternatives:
        # value_template: "{{ states('sensor.sun_illuminance') != 'unknown' and (states('sensor.sun_illuminance') | int < 15320) }}"
        # value_template: >
        #   {{ states('sensor.illuminance') | int(0) < 7500 or
        #      states('sensor.solar_angle') | int(0) < 5 or
        #      'fog' in states('weather.openweathermap_hourly') or
        #      'cloudy' in states('weather.openweathermap_hourly') or
        #      'rain' in states('weather.openweathermap_hourly') or
        #      'pouring' in states('weather.openweathermap_hourly') }}
        # value_template: "{{ states('sensor.office_illuminance') | int(0) <= 25 }}"
        value_template: >
          {{ states('sensor.illuminance') | int(0) < 30000 or is_state('binary_sensor.is_fair_weather', 'off') }}
      nighttime:
        friendly_name: Night-time
        value_template: "{{ state_attr('sun.sun', 'elevation') < 0 }}"
      daytime:
        friendly_name: Day-time
        value_template: "{{ state_attr('sun.sun', 'elevation') >= 0 }}"

multiscrape:
  - resource: https://pollencount.co.za/
    scan_interval: 21600  # 60*60*6 or 4 updates per day
    timeout: 30
    sensor:
      - name: Overall Pollen Risk
        icon: mdi:flower-pollen-outline
        select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(2) > div"
        attribute: "class"
        value_template: >-
          {# set value = ["pollen-darkorange"] #}
          {%- from 'pollen.jinja' import color_level_map -%}
          {%- set key = value | first -%}
          {{ color_level_map[key] if key in color_level_map else "unknown" }}
        on_error:
          value: last
        attributes:
          - name: Label
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(2) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "Unavailable" }}
            on_error:
              value: last
          # this looks like massive duplication, but we want attributes here so that we can trigger on state
          # changes of this sensor if an individual pollen level has changed. we need the individual sensors
          # so that we can set a name and an icon for use on dashboards. granted, we can make these normal
          # template sensors that extracts the attributes from here.
          - name: Tree Pollen
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(3) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "unknown" }}
            on_error:
              value: last
          - name: Grass Pollen
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(4) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "unknown" }}
            on_error:
              value: last
          - name: Weed Pollen
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(5) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "unknown" }}
            on_error:
              value: last
          - name: Mould Spores
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(6) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "unknown" }}
            on_error:
              value: last
      - name: Tree Pollen
        icon: mdi:pine-tree
        select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(3) > div"
        attribute: "class"
        value_template: >-
          {%- from 'pollen.jinja' import color_level_map -%}
          {%- set key = value | first -%}
          {{ color_level_map[key] if key in color_level_map else "unknown" }}
        on_error:
          value: last
        attributes:
          - name: Label
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(3) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "Unavailable" }}
            on_error:
              value: last
      - name: Grass Pollen
        icon: mdi:grass
        select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(4) > div"
        attribute: "class"
        value_template: >-
          {%- from 'pollen.jinja' import color_level_map -%}
          {%- set key = value | first -%}
          {{ color_level_map[key] if key in color_level_map else "unknown" }}
        on_error:
          value: last
        attributes:
          - name: Label
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(4) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "Unavailable" }}
            on_error:
              value: last
      - name: Weed Pollen
        icon: mdi:sprout
        select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(5) > div"
        attribute: "class"
        value_template: >-
          {%- from 'pollen.jinja' import color_level_map -%}
          {%- set key = value | first -%}
          {{ color_level_map[key] if key in color_level_map else "unknown" }}
        on_error:
          value: last
        attributes:
          - name: Label
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(5) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "Unavailable" }}
            on_error:
              value: last
      - name: Mould Spores
        icon: mdi:grain
        select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(6) > div"
        attribute: "class"
        value_template: >-
          {%- from 'pollen.jinja' import color_level_map -%}
          {%- set key = value | first -%}
          {{ color_level_map[key] if key in color_level_map else "unknown" }}
        on_error:
          value: last
        attributes:
          - name: Label
            select: "#wpv-view-layout-300 > div > div > div.image-resize > div:nth-child(2) > div:nth-child(6) > div"
            attribute: "class"
            value_template: >-
              {%- from 'pollen.jinja' import color_label_map -%}
              {%- set key = value | first -%}
              {{ color_label_map[key] if key in color_label_map else "Unavailable" }}
            on_error:
              value: last
  - resource: https://forestry.co.za/fire-danger-index/
    scan_interval: 21600  # 60*60*6 or 4 updates per day
    timeout: 30
    log_response: true
    sensor:
      # http://envirowildfire.co.za/the-fire-danger-index/
      # Blue   :  0 –  20 : SAFE           : Cold and wet.
      # Green  : 21 –  45 : MODERATE       : Low fire risk. Care to be taken for burning operations.
      # Yellow : 46 –  60 : DANGEROUS      : Caution advised.
      # Orange : 61 –  75 : VERY DANGEROUS : Teams kept on stand by. No open flames.
      # Red    : 81 – 100 : EXTREME        : Warnings presented on radio and TV forecasts.
      - name: Winelands FDI
        icon: >-
          {% if value | int(0) > 45 %}
            mdi:fire-alert
          {% else %}
            mdi:fire
          {% endif %}
        # https://community.home-assistant.io/t/scrape-sensor-improved-scraping-multiple-values/218350/469
        # copy soup file locally
        # from bs4 import BeautifulSoup
        # f = open('page_soup.txt')
        # soup = BeautifulSoup(f, 'html.parser')
        # prettyHtml = soup.prettify()
        # with open('pretty.html', 'w') as o:
        #   o.write(prettyHtml)
        # open file in browser
        # copy selector
        # test selector with:
        # soup.select_one("...")
        select: "main > div.page-content > div.elementor-8676 > section.elementor-element-b51f73d > div > div.elementor-element-72d9bb2 > div > div.elementor-element-b529cf5 > div > div > div.postie-post > table:nth-of-type(12) > tr:nth-child(10) > td:nth-child(3) > font"
        value_template: >-
          {{ value }}
        on_error:
          value: last

automation:
  - alias: "Download Dam Levels Data"
    id: "0cb4d6ba-5a63-45f7-8adc-efb98724a44e"
    trigger:
      - platform: time
        at: "05:00:00"
    action:
      - service: shell_command.download_latest_dam_levels

  - alias: "Pollen Levels Update"
    id: "eeb7f4a7-367d-4aee-b4d5-cf84da3b1323"
    initial_state: true
    trigger:
      # If only entity_id is given, the trigger will fire for all state changes, even if only state attributes change.
      # https://www.home-assistant.io/docs/automation/trigger/#state-trigger
      - platform: state
        entity_id:
          - sensor.overall_pollen_risk
          - sensor.tree_pollen
          - sensor.grass_pollen
          - sensor.weed_pollen
          - sensor.mould_spores
    mode: single
    action:
      - service: notify.family
        data:
          title: "Health"
          # https://community.home-assistant.io/t/trigger-to-from-attribute/325345
          # https://community.home-assistant.io/t/access-attribute-of-from-state/380497
          message: >-
            {%- macro build_item(sensor, name) -%}
              {%- set attribute = sensor.split('.')[1] -%}
              {%- set from = trigger.from_state.attributes[attribute] | lower -%}
              {%- set to = trigger.to_state.attributes[attribute] | lower -%}
              {%- if from != to -%}
                {{ name }}: changed from {{ from }} to {{ to }}
              {%- else -%}
                {{ name }}: {{ to }}
              {%- endif -%}
            {%- endmacro -%}
            {%- set sensors = [('sensor.tree_pollen', 'Trees'), ('sensor.grass_pollen', 'Grasses'), ('sensor.weed_pollen', 'Weeds'), ('sensor.mould_spores', 'Mould')] -%}
            {%- set summary = '' -%}
            {%- set from_state_label = trigger.from_state.attributes.label | lower -%}
            {%- set to_state_label = trigger.to_state.attributes.label | lower -%}
            {%- if from_state_label != to_state_label -%}
              {%- set summary = 'Pollen levels changed from ' ~ from_state_label ~ ' to ' ~ to_state_label ~ '.' -%}
            {%- else -%}
              {%- set summary = 'Pollen levels are ' ~ to_state_label ~ '.' -%}
            {%- endif -%}
            {{ summary }}
            {%- for (sensor, name) in sensors %}
              - {{ build_item(sensor, name) }}
            {%- endfor %}
          data:
            group: "environment"
            url: homeassistant://navigate/lovelace/environment

  - alias: "High UV Notification"
    id: "101c7f2d-6839-4a8c-be1a-0de46ed70477"
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.openweathermap_uv_index
        above: 5
    mode: single
    action:
      - service: notify.family
        data:
          title: "Health"
          message: >
            UV radiation is high. Remember to apply sunscreen.
          data:
            group: "environment"
            url: homeassistant://navigate/lovelace/environment

  - alias: "High Fire Risk Notification"
    id: "657e1700-f69f-416e-9b62-269d702e8a38"
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.winelands_fdi
        above: 45
    mode: single
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "Environment"
          message: >-
            The risk of fires is dangerously high. FDI: {{ states('sensor.winelands_fdi') }}.
          data:
            group: "environment"
            url: homeassistant://navigate/lovelace/environment
