# credit: https://github.com/tinuva/home-assistant-config/blob/8b16e0fa53be37682e4add2f338d8777bfd9896e/packages/energy/eskomsepush.yaml
# https://zatech.slack.com/archives/CG4HBE0NB/p1664122287331179?thread_ts=1664122287.331179&cid=CG4HBE0NB
# EskomSePush API Docs: https://documenter.getpostman.com/view/1296288/UzQuNk3E
# To sign up for a key, scroll down on their page for the API Request link: https://sepush.co.za/
# Direct link to sign-up form: https://docs.google.com/forms/d/e/1FAIpQLSeZhAkhDaQX_mLT2xn41TkVjLkOH3Py3YWHi_UqQP4niOY01g/viewform

# other interesting links:
# https://www.eskom.co.za/eskom-divisions/tx/system-adequacy-reports/

# test stuff
# curl -s -X GET -H "Token: XXXXXXXX-XXXXXXXX-XXXXXXXX-XXXXXXXX" --url "https://developer.sepush.co.za/business/2.0/api_allowance"

rest:
  - resource: "https://developer.sepush.co.za/business/2.0/area"
    # maybe give this and the sensor below a scheduled update interval in future
    # https://community.home-assistant.io/t/rest-sensor-can-i-schedule-when-the-update-happens/408500
    scan_interval: 3600  # rate limit
    headers:
      token: !secret eskomsepush
    params:
      id: "westerncape-2-stellenboschmunicipality"
    sensor:
      - name: EskomSePush
        force_update: true
        value_template: "OK"
        json_attributes:
          - events
          - info
          - schedule

sensor:
  # Eskom se Push sensor
  - platform: rest
    name: EskomSePush Allowance
    resource: "https://developer.sepush.co.za/business/2.0/api_allowance"
    headers:
      Token: !secret eskomsepush
    json_attributes_path: "$.allowance"
    json_attributes:
      - count
      - limit
      - type
    value_template: "OK"
    scan_interval: 3600

  # template sensors abased on ESP above
  # todo: what if there's no loadshedding?
  - platform: template
    sensors:
      loadshedding_start_time:
        unique_id: "7c572fed-f4e0-4889-83ea-8995932c1464"
        friendly_name: Loadshedding Start Time
        device_class: timestamp
        value_template: >-
          {% if states('sensor.eskomsepush')
                and state_attr('sensor.eskomsepush', 'events') != []
                and 'start' in (state_attr('sensor.eskomsepush', 'events') | first) %}
            {{ (state_attr('sensor.eskomsepush', 'events') | first).start }}
          {% else %}
            {{ 0 | as_datetime }}
          {% endif %}
      loadshedding_end_time:
        unique_id: "c6e3c440-e930-434f-95fc-a9d68dd42fe4"
        friendly_name: Loadshedding End Time
        device_class: timestamp
        value_template: >-
          {% if states('sensor.eskomsepush')
                and state_attr('sensor.eskomsepush', 'events') != []
                and 'end' in (state_attr('sensor.eskomsepush', 'events') | first) %}
            {{ (state_attr('sensor.eskomsepush', 'events') | first).end }}
          {% else %}
            {{ 0 | as_datetime }}
          {% endif %}
      loadshedding_stage:
        unique_id: "a7314ceb-7afa-4a71-ae9e-deb6b9d956d9"
        friendly_name: Loadshedding Stage
        icon_template: >-
          {% if states('sensor.eskomsepush')
                and state_attr('sensor.eskomsepush', 'events') != []
                and 'note' in (state_attr('sensor.eskomsepush', 'events') | first) %}
            {% set stage = (state_attr('sensor.eskomsepush', 'events') | first).note %}
            {% if stage == 'Stage 1' %}
              mdi:gauge-empty
            {% elif stage == 'Stage 2' %}
              mdi:gauge-low
            {% elif stage == 'Stage 3' %}
              mdi:gauge
            {% else %}
              mdi:gauge-full
            {% endif %}
          {% else %}
            mdi:checkbox-marked-circle
          {% endif %}
        value_template: >-
          {% if states('sensor.eskomsepush')
                and state_attr('sensor.eskomsepush', 'events') != []
                and 'note' in (state_attr('sensor.eskomsepush', 'events') | first) %}
            {{ (state_attr('sensor.eskomsepush', 'events') | first).note }}
          {% else %}
            No loadshedding
          {% endif %}
      loadshedding_duration:
        friendly_name: Loadshedding Duration
        unique_id: "03a725e4-77ce-4fbe-9a3e-5b15b064d14f"
        device_class: duration
        unit_of_measurement: h
        value_template: >-
          {%- if states('sensor.eskomsepush') and state_attr('sensor.eskomsepush', 'events') != [] -%}
            {{ (states('sensor.loadshedding_end_time') | as_datetime - states('sensor.loadshedding_start_time') | as_datetime).seconds/60/60 }}
          {%- else -%}
            {{ 0 }}
          {%- endif -%}
      eskomsepush_calls_remaining:
        unique_id: "c0a18142-5518-4274-b34d-4f7ab017a43d"
        friendly_name: EskomSePush API Calls Remaining
        icon_template: mdi:api
        value_template: "{{ state_attr('sensor.eskomsepush_allowance', 'limit') | int(0) - state_attr('sensor.eskomsepush_allowance', 'count') | int(0) }}"
      loadshedding_forecast:
        unique_id: "4ac805d7-5b15-400d-b3c7-402df2324ca5"
        friendly_name: Loadshedding Forecast
        value_template: >
          Your latest forecast:
          {# to not exceed the 255 character limit of the sensor, limit this to the next 3 events #}
          {% set events = state_attr('sensor.eskomsepush', 'events')[0:3] %}
          {%- if events != [] -%}
            {%- for event in events %}
              {%- set date = as_timestamp(event['start']) | timestamp_custom('%a %d') -%}
              {%- set stage = event['note'] -%}
              {%- set start_time = as_timestamp(event['start']) | timestamp_custom('%H:%M') -%}
              {%- set end_time = as_timestamp(event['end']) | timestamp_custom('%H:%M') -%}
              {%- set duration = states('sensor.loadshedding_end_time') | as_datetime - states('sensor.loadshedding_start_time') | as_datetime -%}
              {%- set hours = duration.seconds // 3600 -%}
              {%- set minutes = (duration.seconds % 3600) // 60 %}
            - {{ date ~ ': ' ~ start_time ~ '-' ~ end_time ~ ' (' ~ '~' ~ hours ~ 'h; ' ~ stage ~ ')'}}
            {%- endfor -%}
          {%- else -%}
            No loadshedding.
          {%- endif -%}

binary_sensor:
  - platform: template
    sensors:
      loadshedding_active:
        friendly_name: Loadshedding Active
        device_class: problem
        value_template: >-
          {%- if state_attr('sensor.eskomsepush', 'events') == [] -%}
            False
          {%- else -%}
            {% set start = (state_attr('sensor.eskomsepush', 'events') | first).start | as_datetime %}
            {% set end = (state_attr('sensor.eskomsepush', 'events') | first).end | as_datetime %}
            {{ start <= now() <= end }}
          {%- endif -%}

timer:
  loadshedding_duration:
    name: Loadshedding Duration Remaining
    restore: true

automation:
  - alias: "Start Loadshedding Timer"
    id: "ed1036a6-3399-4e6b-a4ca-889e75da896f"
    trigger:
      - platform: time
        at: sensor.loadshedding_start_time
    mode: single
    condition:
      - condition: state
        entity_id: timer.loadshedding_duration
        state: "idle"
    action:
      - service: timer.start
        data:
          entity_id: timer.loadshedding_duration
          duration: >-
            {% set start = (state_attr('sensor.eskomsepush', 'events') | first).start | as_datetime %}
            {% set end = (state_attr('sensor.eskomsepush', 'events') | first).end | as_datetime %}
            {{ end - start }}

  - alias: "Loadshedding Forecast Notification"
    id: "89d2c61c-24b6-463a-8b2a-bfe07581e60e"
    trigger:
      - platform: state
        entity_id: sensor.loadshedding_forecast
        # this is a stopgap; don't know why sensor.loadshedding_forecast goes unavailable
        not_to:
          - "unavailable"
          - "unknown"
    mode: single
    # we truncate the forecast due to the length limit in home assistant, which then sometimes look like
    # nothing has changed, because the change is actually within the truncated part
    # we check here that the notification's text is actually different from the previous value
    condition:
      - condition: template
        value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
    action:
      - service: notify.family
        data:
          title: "Loadshedding"
          message: "{{ states('sensor.loadshedding_forecast') }}"
          data:
            group: "home-electricity"
            url: homeassistant://navigate/lovelace/main

  - alias: "Upcoming Loadshedding Notification"
    id: "a7c1b125-56a1-48d3-bf54-4d5430c81508"
    initial_state: true
    trigger:
      - platform: template
        id: "60"
        value_template: >-
          {% set offset = 60 %}
          {% set t = (states('sensor.loadshedding_start_time') | as_datetime | as_local - timedelta(minutes=offset)).strftime('%Y-%d-%m %H:%M') %}
          {% set n = now().strftime('%Y-%d-%m %H:%M') %}
          {{ n == t }}
      # seems redundant now with a solar system
      # - platform: template
      #   id: "15"
      #   value_template: >-
      #     {% set offset = 15 %}
      #     {% set t = (states('sensor.loadshedding_start_time') | as_datetime | as_local - timedelta(minutes=offset)).strftime('%Y-%d-%m %H:%M') %}
      #     {% set n = now().strftime('%Y-%d-%m %H:%M') %}
      #     {{ n == t }}
    mode: single
    condition:
      - condition: time
        after: "05:00:00"
        before: "23:00:00"
    action:
      - service: notify.family
        data:
          title: "Loadshedding"
          message: >-
            {% set start = (states('sensor.loadshedding_start_time') | as_datetime | as_local).strftime('%H:%M') %}
            {% set end = (states('sensor.loadshedding_end_time') | as_datetime | as_local).strftime('%H:%M') %}
            {% set duration = states('sensor.loadshedding_duration') | float(0) %}
            {% set hours = duration | int %}
            {% set minutes = duration - hours %}
            Starting in {{ trigger.id }} min: {{ start }}-{{ end }} (~{{ hours }}h; {{ states('sensor.loadshedding_stage') }}).
          data:
            group: "home-electricity"
            url: homeassistant://navigate/lovelace/main
