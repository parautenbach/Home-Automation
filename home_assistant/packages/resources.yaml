template:
  - binary_sensor:
      - name: "Grid Feed"
        device_class: power
        state: "{{ states('sensor.grid_frequency') | int(0) > 0 }}"
        icon: >-
          {% if states('sensor.grid_frequency') | int(0) > 0 %}
            mdi:transmission-tower
          {% else %}
            mdi:transmission-tower-off
          {% endif %}
  - sensor:
      - name: "Home Power"
        unique_id: "ec13fb72-1d08-427a-918b-e7549539a1be"
        unit_of_measurement: W
        device_class: power
        # battery power goes positive and negative (postive power means the battery is charging)
        state: "{{ states('sensor.grid_power') | int(0) + states('sensor.pv_power') | int(0) - states('sensor.battery_power') | int(0) }}"
      - name: "Solar Reserve"
        unique_id: "cdff01dd-8401-4c0e-a661-1a72d74dbb01"
        unit_of_measurement: W
        device_class: power
        state: >-
          {% set pv_potential = states('sensor.power_production_now') | int(0) %}
          {% set pv_power = states('sensor.pv_power') | int(0) %}
          {% set battery_power = states('sensor.battery_power') | int(0) %}
          {%- if (pv_power > pv_potential and pv_power > 10) or (pv_power > 10 and battery_power < 0) %}
            0
          {% elif pv_potential > 0 %}
            {{ pv_potential - pv_power }}
          {% else %}
            0
          {% endif %}
      - name: "Solar Consumption Percentage"
        unit_of_measurement: "%"
        state: >
          {% set pv_potential = states('sensor.power_production_now') | int(0) %}
          {% set pv_power = states('sensor.pv_power') | int(0) %}
          {% set battery_power = states('sensor.battery_power') | int(0) %}
          {%- if (pv_power > pv_potential and pv_power > 10) or (pv_power > 10 and battery_power < 0) %}
            100
          {% elif pv_potential > 0 %}
            {{ (pv_power / pv_potential * 100) | round(0) }}
          {% else %}
            0
          {% endif %}
      - name: "Solar Reserve Percentage"
        unit_of_measurement: "%"
        state: >
          {% if states('sensor.power_production_now') | int(0) > 0 %}
            {{ 100 - states('sensor.solar_consumption_percentage') | int(0) }}
          {% else %}
            0
          {% endif %}

sensor:
  - platform: derivative
    source: sensor.battery_state_of_charge
    name: "Battery Change of Charge"
    round: 1
    unit_time: h
    unit: "%/h"
    time_window: "00:05:00"
  # digital power meter in db
  - platform: integration
    name: "Total Electricity Consumption"
    source: sensor.current_power
    unit_prefix: k
    unit_time: h
    method: left
    round: 3
  - platform: integration
    name: "Home Energy"
    source: sensor.home_power
    unit_prefix: k
    unit_time: h
    method: left
    round: 3

utility_meter:
  daily_grid_energy_consumption:
    unique_id: "cb11e11e-259d-43dc-bc65-a9752b0bd31a"
    source: sensor.grid_energy_in
    cycle: daily
  monthly_grid_energy_consumption:
    unique_id: "be9b3cac-80e0-4d59-8557-403d17100b22"
    source: sensor.grid_energy_in
    cycle: monthly
  daily_home_energy_consumption:
    unique_id: "765e119e-60ef-4e0b-87f0-e7d64adad81a"
    source: sensor.home_energy
    cycle: daily
  monthly_home_energy_consumption:
    unique_id: "ffcf90f5-5f22-47be-a389-8e74876ecead"
    source: sensor.home_energy
    cycle: monthly

automation:
  - alias: "Notify If Grid Feed Status Changed"
    id: "b233b973-cf9b-44b5-94e4-5f0813e6eefa"
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.grid_feed
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "Home"
          message: >-
            {% set after = "" %}
            {% set seconds = (as_timestamp(utcnow()) - as_timestamp(trigger.from_state.last_changed)) | int %}
            {% if seconds < 60 %}
              {% set after = seconds ~ " sec" %}
            {% elif seconds < 60*60 %}
              {% set after = seconds // 60 ~ " min" %}
            {% else %}
              {% set h = seconds // (60*60) %}
              {% set m = ((seconds / (60*60) - seconds // (60*60)) * 60) | round %}
              {% if m < 10 %}
                {% set after = h ~ "h0" ~ m %}
              {% else %}
                {% set after = h ~ "h" ~ m %}
              {% endif %}
            {% endif %}
            The grid feed has been {{ 'restored after ' ~  after ~ '.' if is_state('binary_sensor.grid_feed', 'on') else 'cut.' }}
          data:
            group: "home-electricity"
            url: homeassistant://navigate/lovelace/resources
