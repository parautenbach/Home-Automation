homeassistant:
  customize:
    script.noop:
      icon: mdi:blank
    sensor.server_cpu_temp:
      friendly_name: CPU temperature
    sensor.cape_town:
      friendly_name: Cape Town
    sensor.san_francisco:
      friendly_name: San Francisco
    sensor.london:
      friendly_name: London
    sensor.thor_disk_usage:
      friendly_name: Disk use (percent)
      icon: mdi:harddisk
    sensor.mqtt_broker_sent_messages_1min_load:
      friendly_name: MQTT broker messages out
    sensor.mqtt_broker_received_messages_1min_load:
      friendly_name: MQTT broker messages in
    sensor.last_backup:
      friendly_name: "Most recent backup"
    sensor.db_size:
      icon: mdi:database
    binary_sensor.python_package_index_pypi_update_available:
      friendly_name: HA Updater
    sensor.watchman_missing_entities:
      friendly_name: Missing Entities
    sensor.watchman_missing_services:
      friendly_name: Missing Services
    sensor.network_throughput_in_enp3s0:
      icon: mdi:download-network-outline
    sensor.network_throughput_out_enp3s0:
      icon: mdi:upload-network-outline

input_boolean:
  server_shut_down_automatically:
    name: Server Shut Down Automatically
    icon: mdi:server

binary_sensor:
  - platform: template
    sensors:
      no_recent_backup:
        friendly_name: "Recent Backup Problem"
        device_class: problem
        # get the last file, extract the date and compare
        value_template: >-
          {% set last_backup = (0 if states('sensor.last_backup') == "unknown" else states('sensor.last_backup')) | as_datetime %}
          {{ 'on' if ((utcnow() - last_backup).days > 4) else 'off' }}
        icon_template: >-
          {{ state_attr('sensor.last_backup', 'icon') or "mdi:file-alert-outline" }}
      hacs_updater:
        friendly_name: HACS Updater
        device_class: update
        value_template: >
         {{ integration_entities('hacs') | select('match', '^update\.') | expand | selectattr('state', 'eq', 'on') | list | count }}
      ha_updater:
        friendly_name: HA Updater
        device_class: update
        value_template: >-
          {{ is_state('binary_sensor.python_package_index_pypi_update_available', 'on') }}
        attribute_templates:
          latest_version: >-
            {{ states('sensor.python_package_index_pypi') }}
          current_version: >-
            {{ states('sensor.current_version') }}

sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'

  # used to check backups
  - platform: folder
    folder: /mnt/nas/Backups/home_assistant/
    filter: 'hass-config_*.zip'
    scan_interval: 3600

  - platform: linux_battery
    name: Home Assistant Server Battery
    battery: 0
    system: linux
    scan_interval: 60

  - platform: template
    sensors:
      last_backup:
        # relies on cronjob running on a sunday and a wednedsay
        device_class: timestamp
        # https://community.home-assistant.io/t/what-to-return-in-timestamp-template-sensor-when-state-is-unknown/377152/
        value_template: >-
          {% set file_list = state_attr('sensor.home_assistant', 'file_list') | sort %}
          {% if file_list != [] %}
            {% set last_backup_file = file_list | last %}
            {{ strptime(last_backup_file[-19:-4] ~ '+0000', '%Y%m%d_%H%M%S%z', None).isoformat() }}
          {% else %}
            {{ 0 | as_datetime }}
          {% endif %}
        icon_template: >-
          {% set file_list = state_attr('sensor.home_assistant', 'file_list') | sort %}
          {% if file_list != [] %}
            {% set last_backup_file = file_list | last %}
            {% set last_backup_dt = strptime(last_backup_file[-19:-4] ~ '+0000', '%Y%m%d_%H%M%S%z', 0 | as_datetime) %}
            {% if (utcnow() - last_backup_dt).days > 4 %}
              mdi:file-alert-outline
            {% else %}
              mdi:file-outline
            {% endif %}
          {% else %}
            mdi:file-alert-outline
          {% endif %}
      home_assistant_server_battery_status:
        friendly_name: "Home Assistant Server Battery Status"
        value_template: >-
          {{ state_attr('sensor.home_assistant_server_battery', 'status') }}
        icon_template: >-
          {% set state = states('sensor.home_assistant_server_battery') | int(0) %}
          {% set charging = "-charging" if states('sensor.home_assistant_server_battery_status') == "Charging" else "" %}
          {% set suffix = (state // 10) * 10 %}
          {# empty #}
          {% if suffix == 0 %}
            mdi:battery{{ charging }}-outline
          {# full #}
          {% elif suffix == 100 %}
            {# choose the right full battery #}
            {% if charging != "" %}
              mdi:battery-charging-100
            {% else %}
              mdi:battery
            {% endif %}
          {# everything in between #}
          {% else %}
            mdi:battery{{ charging }}-{{ suffix }}
          {% endif %}

command_line:
  - sensor:
      name: server_cpu_temp
      command: "cat /sys/class/thermal/thermal_zone0/temp"
      # not a valid option for this platform
      # device_class: temperature
      unit_of_measurement: "°C"
      value_template: '{{ value | multiply(0.001) | round(2) }}'
      scan_interval: 60

mqtt:
  sensor:
    - name: MQTT Broker Received Messages (1min load)
      state_topic: $SYS/broker/load/messages/received/1min
      unit_of_measurement: 'messages/s'
      icon: mdi:email-arrow-left-outline

    - name: MQTT Broker Sent Messages (1min load)
      state_topic: $SYS/broker/load/messages/sent/1min
      unit_of_measurement: 'messages/s'
      icon: mdi:email-arrow-right-outline

template:
  - trigger:
    - platform: time_pattern
      minutes: "/1"
    sensor:
      # https://community.home-assistant.io/t/sensor-unavailable-offline-detection/147618
      # https://community.home-assistant.io/t/how-to-list-all-sensors-with-state-unavailable-none-or-unknown/154606
      - name: Unavailable Entities
        icon: mdi:help-circle-outline
        state: >-
          {%- from 'system.jinja' import get_entities_by_state -%}
          {{ get_entities_by_state(['unavailable', 'unknown', 'none']).split(',') | length }}
        unit_of_measurement: entities
        state_class: measurement
        attributes:
          # buttons don't have state – we don't care about buttons here
          unavailable: >-
            {%- from 'system.jinja' import get_entities_by_state -%}
            {{ get_entities_by_state(['unavailable']).split(',') }}
          unknown: >-
            {%- from 'system.jinja' import get_entities_by_state -%}
            {{ get_entities_by_state(['unknown']).split(',') }}
          none: >-
            {%- from 'system.jinja' import get_entities_by_state -%}
            {{ get_entities_by_state(['none']).split(',') }}

  - trigger:
    - platform: time_pattern
      minutes: "/1"
    sensor:
      - name: Disabled Automations
        icon: mdi:refresh-auto
        state: "{{ states.automation | selectattr('state', 'eq', 'off') | list | length }}"
        unit_of_measurement: entities
        attributes:
          automations: "{{ states.automation | selectattr('state', 'eq', 'off') | map(attribute='attributes.friendly_name') | sort | list }}"

  - trigger:
    - platform: time_pattern
      minutes: "/1"
    sensor:
      - name: Faulty Automations
        icon: mdi:sync-alert
        state: "{{ states.automation | selectattr('state', 'eq', 'unavailable') | list | length }}"
        unit_of_measurement: entities
        attributes:
          automations: "{{ states.automation | selectattr('state', 'eq', 'unavailable') | map(attribute='attributes.friendly_name') | sort | list }}"

  - sensor:
      - name: Monitored Batteries
        icon: mdi:battery-alert
        state: "{{ states.sensor | selectattr('attributes.monitor','eq',True) | map(attribute='entity_id') | list | count }}"
        unit_of_measurement: batteries
        state_class: measurement
        attributes:
          # https://community.home-assistant.io/t/recommended-ways-to-manage-devices-and-entities-names/243815/12
          batteries: "{{ states.sensor | selectattr('attributes.monitor', 'eq', True) | map(attribute='entity_id') | list }}"

  - sensor:
      # https://community.home-assistant.io/t/trigger-an-automation-based-on-a-groups-individual-entity-state-change/383560/2
      # https://community.home-assistant.io/t/single-automation-for-all-lights/375028/7
      - name: Number of Flat Batteries
        icon: mdi:battery-alert-variant-outline
        state: >
          {% set level = 0 %}
          {% set flat_batteries =
               states.sensor
                 | selectattr('attributes.monitor', 'defined')
                 | selectattr('attributes.monitor', 'eq', True)
                 | rejectattr('state', 'in', ['unavailable', 'unknown', 'none'])
                 | selectattr('attributes.device_class', 'eq', 'battery')
                 | map(attribute='state')
                 | map('int')
                 | select('eq', level)
                 | list
          %}
          {{ flat_batteries | count }}

shell_command:
  noop: ":"
  shudown_remote_host: "/home/homeassistant/scripts/shutdown_remote_host.sh {{ host }}"
  # https://www.debian.org/releases/stretch/amd64/ch08s01.html.en
  # https://www.computernetworkingnotes.com/linux-tutorials/shutdown-reboot-suspend-and-hibernate-a-linux-system.html
  shutdown_server: "sudo /usr/sbin/shutdown -h now"
  make_backup: "/home/homeassistant/scripts/backup.sh"
  make_db_backup: "/home/homeassistant/scripts/backup_db.sh"

script:
  noop:
    sequence:
      - service: shell_command.noop
  shutdown_remote_host:
    description: "Shut down a remote host via SSH"
    # assumes ssh keys and a config map is set up
    # https://askubuntu.com/questions/191257/how-could-i-shutdown-a-remote-host-in-my-network-thru-ssh-with-a-local-host
    fields:
      name:
        description: "A display name for the host"
        example: "example.local"
      host:
        description: "The host as defined in the SSH config map"
        example: "some_host"
    mode: parallel
    sequence:
      - condition: template
        value_template: "{{ is_state('binary_sensor.' ~ host, 'on') }}"
      - service: shell_command.shudown_remote_host
        data:
          host: "{{ host }}"
      - delay:
          seconds: 5
      - service: homeassistant.update_entity
        target:
          entity_id: "binary_sensor.{{ host }}"
      - wait_template: "{{ is_state('binary_sensor.' ~ host, 'off') }}"
        timeout:
          minutes: 1
        continue_on_timeout: true
      - service: persistent_notification.create
        data:
          title: System
          # https://community.home-assistant.io/t/work-with-triggered-by-in-automations/400352/8
          # https://community.home-assistant.io/t/user-id-under-this-context-user-id-differs-from-context-user-id/638651/2
          message: >-
            {# there are several context objects – be careful which one you use #}
            {# states.context, just context and this.context... #}
            {% set user_id = states.script.shutdown_remote_host.context.user_id %}
            {# set user_id = states.context.user_id #}
            {% set triggered_by = (states.person | selectattr('attributes.user_id','==', user_id)) | list %}
            {% set first_name = "System" if not triggered_by else state_attr((triggered_by | first).entity_id, "friendly_name").split()[0] %}
            {{ first_name }} shut down {{ name }}.

  shutdown_all_remote_hosts:
    description: "Shut down all remote hosts"
    mode: single
    sequence:
      - parallel:
          - service: script.turn_on
            target:
              entity_id: script.shutdown_remote_host
            data:
              variables:
                name: Thor
                host: thor
          - service: script.turn_on
            target:
              entity_id: script.shutdown_remote_host
            data:
              variables:
                name: CCTV
                host: cctv
          - service: script.turn_on
            target:
              entity_id: script.shutdown_remote_host
            data:
              variables:
                name: Rasplex
                host: rasplex
          - service: script.turn_on
            target:
              entity_id: script.shutdown_remote_host
            data:
              variables:
                name: Rasplay
                host: rasplay
          - delay:
              seconds: 1

  make_backup:
    description: "Backup Home Assistant"
    mode: single
    sequence:
      - service: shell_command.make_backup
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.home_assistant

  make_db_backup:
    description: "Backup Home Assistant DB"
    mode: single
    sequence:
      - service: shell_command.make_db_backup


automation:
  - alias: "Set Light Theme"
    id: "b2139218-ae45-4fc5-a049-1a9692bc387e"
    trigger:
      - platform: homeassistant
        event: start
      - platform: sun
        event: sunrise
        # 30 min after sunrise
        offset: "00:30:00"
    # condition needed for the start trigger
    condition:
      - condition: sun
        after: sunrise
    action:
      service: frontend.set_theme
      data:
        name: custom-light-mode

  - alias: "Set Dark Theme"
    id: "2a26deed-9071-4eb4-80b7-d014dfe98def"
    trigger:
      - platform: homeassistant
        event: start
      - platform: sun
        event: sunset
        # 30 min after sunset
        offset: "00:30:00"
    # condition needed for the start trigger
    condition:
      - condition: sun
        after: sunset
    action:
      service: frontend.set_theme
      data:
        name: slate

  - alias: "Check Disk Space on the Home Assistant Server"
    id: "e955e738-4162-486e-a915-d30b5952d238"
    trigger:
      - platform: time_pattern
        hours: "/1"
    condition:
      - condition: numeric_state
        entity_id: sensor.disk_use_percent
        above: 89
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "⚠️ System"
          message: "Server disk usage is {{ states('sensor.disk_use_percent') }}%!"
          data:
            group: "system-disk-space"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Notify When Server Started After Being Shut Down Automatically"
    id: "cc787a25-6e55-4388-ab3c-68e9716bce50"
    trigger:
      - platform: homeassistant
        event: start
    mode: single
    condition:
      - condition: state
        entity_id: input_boolean.server_shut_down_automatically
        state: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.server_shut_down_automatically
      - service: notify.mobile_app_ceres
        data:
          title: "✅ System"
          message: "Server started."
          data:
            group: "system-general"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Notify If Server Load High"
    id: "720ef41c-589a-4b16-9223-6e49d362e721"
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.load_15m
      above: 1
      for:
        minutes: 15
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "⚠️ System"
          # https://community.home-assistant.io/t/convert-trigger-for-into-a-relative-age/196979
          message: "The server's load has been {{ states('sensor.load_15m') }} for {{ trigger.for.seconds // 60 }} min."
          data:
            group: "system-resources"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Notify If Server Memory Usage High"
    id: "5bc47b01-199c-4f97-bf2e-b3661380fcc6"
    initial_state: true
    trigger:
      platform: numeric_state
      entity_id: sensor.memory_use_percent
      above: 90
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "⚠️ System"
          message: "The server's memory usage is high ({{ states('sensor.memory_use_percent') }}%)."
          data:
            group: "system-resources"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Backup Home Assistant"
    id: "57461782-62af-4987-a6ce-46f602fcc417"
    trigger:
      platform: time
      at:
        - "02:05:00"
    condition:
      - condition: time
        weekday:
          - wed
          - sun
    action:
      # https://www.home-assistant.io/integrations/script/#waiting-for-script-to-complete
      - service: script.turn_on
        entity_id: script.make_backup

  - alias: "Backup Home Assistant DB"
    id: "23ad9089-b7de-495e-b525-0730fd007c6d"
    trigger:
      platform: time
      at:
        - "03:05:00"
    condition:
      - condition: time
        weekday:
          - sun
    action:
      # https://www.home-assistant.io/integrations/script/#waiting-for-script-to-complete
      - service: script.turn_on
        entity_id: script.make_db_backup

  # backup script: https://gist.github.com/riemers/041c6a386a2eab95c55ba3ccaa10e7b0
  - alias: "Notify If No Recent Backup"
    id: "1069834c-2087-48a9-9015-e9a4a86262d9"
    trigger:
      - platform: state
        entity_id: binary_sensor.no_recent_backup
        to: "on"
      # backup check in case there was a restart and the state didn't change
      - platform: time
        at: "09:00:00"
    mode: single
    condition:
      - condition: state
        entity_id: binary_sensor.no_recent_backup
        state: "on"
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "⚠️ System"
          # https://community.home-assistant.io/t/duplicate-ios-companion-app-notifications/406161
          message: "No recent backup found."
          data:
            group: "system-backup"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Notify If New Backup Found"
    id: "f5382369-7a98-4cc0-bd63-ecf1c6e6f288"
    trigger:
      - platform: state
        entity_id: sensor.last_backup
    mode: single
    condition:
      condition: template
      value_template: >-
        {% set last_backup = states('sensor.last_backup') | as_datetime %}
        {{ ((utcnow() - last_backup).seconds) < 60 }}
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "💾 System"
          message: "A new Home Assistant backup was made."
          data:
            group: "system-backup"
            url: homeassistant://navigate/lovelace-system/devices

  - alias: "Low Server Battery"
    id: "cc72f00c-96e6-49eb-84f3-c72b09f49f7f"
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.home_assistant_server_battery') | int <= 10 }}"
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "🪫 System"
          message: "Server battery is running low!"
          data:
            group: "system-battery"
            url: homeassistant://navigate/lovelace-system/devices

  # udevadm monitor
  # udevadm info --path=/sys/class/power_supply/AC0
  # /etc/udev/rules.d/60-power.rules
  # SUBSYSTEM=="power_supply",ENV{POWER_SUPPLY_NAME}=="AC0",RUN+="/usr/bin/curl -s -X POST http://<host>:<port>/api/webhook/<webhook_id> -d 'status=$env{POWER_SUPPLY_ONLINE}'"
  # udevadm control --reload-rules && udevadm trigger
  # sudo /etc/init.d/udev restart
  # udevadm control --log-priority=debug
  # (sudo) journalctl -f
  - alias: "Update Server Power Status"
    id: "3b2aed6b-5894-4339-acec-19e4e8ce97c7"
    initial_state: true
    trigger:
      - platform: webhook
        webhook_id: server_power_connected
        local_only: true
        allowed_methods:
          - POST
    mode: queued
    action:
      # sensor definition: platform: linux_battery
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.home_assistant_server_battery

  - alias: "Shut Down Server"
    id: "3fd83ac9-dc07-40d7-a9d1-c50c123b32ff"
    initial_state: true
    variables:
      timeout: 90
    trigger:
      - platform: template
        value_template: "{{ is_state('sensor.home_assistant_server_battery_status', 'Discharging') }}"
    mode: single
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: binary_sensor.electricity_feed
      - service: notify.mobile_app_ceres
        data:
          title: "⛔️ System"
          message: "Server will shut down in {{ timeout }} seconds."
          data:
            group: "system-general"
            url: homeassistant://navigate/lovelace-system/devices
      - wait_template: "{{ not is_state('sensor.home_assistant_server_battery_status', 'Discharging') }}"
        timeout:
          seconds: "{{ timeout }}"
        continue_on_timeout: true
      - if:
          - "{{ wait.completed }}"
        then:
          - service: notify.mobile_app_ceres
            data:
              title: "⚠️ System"
              message: "Server shutdown cancelled: Power was restored."
              data:
                group: "system-general"
                url: homeassistant://navigate/lovelace-system/devices
        else:
          - service: input_boolean.turn_on
            entity_id: input_boolean.server_shut_down_automatically
          - service: homeassistant.update_entity
            target:
              entity_id: binary_sensor.electricity_feed
          - service: notify.mobile_app_ceres
            data:
              title: "⛔️ System"
              message: "Server shutting down."
              data:
                group: "system-general"
                url: homeassistant://navigate/lovelace-system/devices
          - delay:
              seconds: 5
          - service: shell_command.shutdown_server

  # polling should be turned off
  # https://github.com/home-assistant/core/issues/71563
  - alias: "Update DB Size"
    id: "7219415c-c1e4-40dd-a429-2f4eccc7da76"
    initial_state: true
    trigger:
      platform: time_pattern
      hours: "/3"
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.db_size

  - alias: "Notify If Some Automations Are Faulty"
    id: "39b68747-7edd-4b32-ad9e-b15c89a5565a"
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.faulty_automations
        above: 0
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "⚠️ Automations"
          message: >-
            {% set n = states('sensor.faulty_automations') | int(0) %}
            {% set automations = state_attr('sensor.faulty_automations', 'automations') %}
            There {{ 'is' if n == 1 else 'are' }} {{ n }} faulty automation{{ '' if n == 1 else 's' }}.
            {%- for a in automations %}
              - {{ a }}
            {%- endfor %}
          data:
            group: "system-general"
            url: homeassistant://navigate/lovelace-system/devices
