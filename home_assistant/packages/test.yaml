homeassistant:
  customize:
    switch.test_shelly1_relay:
      friendly_name: Shelly1 Test

input_boolean:
  test:
    name: Test
    icon: mdi:test-tube

input_number:
  test_percentage:
    min: -100
    max: 100
    unit_of_measurement: "%"

alarm_control_panel:
  - platform: manual
    name: "Test"
    code: !secret alarm_code
    code_arm_required: true
    arming_time: 0
    delay_time: 0
    trigger_time: 30
    disarm_after_trigger: false
    disarmed:
      trigger_time: 30
    armed_home:
      arming_time: 0
      delay_time: 0
      trigger_time: 30
    armed_away:
      arming_time: 0
      delay_time: 0
      trigger_time: 30

alert:
  test:
    name: Test Alert
    entity_id: input_boolean.test
    state: "on"
    repeat: 30  # min
    title: Test Title
    message: "Test message. {{ states('input_boolean.test') }}"
    data:
      group: "test-alerts"
      url: homeassistant://navigate/lovelace-system/devices
    notifiers:
      - mobile_app_ceres

shell_command:
  test_json: '/root/scripts/test_json.sh "{{ data }}"'

script:
  test_foyer_light:
    fields:
      profile:
        description: "A light profile"
    sequence:
      - service: persistent_notification.create
        data:
          title: "Testing"
          message: "Test: '{{ profile }}'"
      - service: light.turn_on
        target:
          entity_id: light.foyer
        data:
          # entity_id: light.foyer
          profile: "{{ profile }}"

  test_nav:
    sequence:
      - service: notify.mobile_app_ceres
        data:
          title: "Test"
          message: "Navigate"
          data:
            url: homeassistant://navigate/lovelace-gallery/gallery

  test:
    description: "Test script"
    fields:
      param1:
        description: "Parameter 1"
        example: "Any text"
    sequence:
      - choose:
          - conditions:
              # duh
              # https://community.home-assistant.io/t/using-a-script-variable-field-in-a-choose-action/297289/2
              - condition: template
                value_template: "{{ param1 is not defined }}"
            sequence:
              - service: persistent_notification.create
                data:
                  title: "Testing"
                  message: "Test: no param"
        default:
          - service: persistent_notification.create
            data:
              title: "Testing"
              message: "Test: '{{ param1 }}'"

  test_snapshot:
    sequence:
      - variables:
          camera_entity_id: camera.security_camera
      - service: camera.snapshot
        target:
          # https://github.com/home-assistant/core/issues/40241
          entity_id: "{{ camera_entity_id }}"
        data:
          entity_id: camera.security_camera
          # https://community.home-assistant.io/t/referencing-entity-id-causing-a-template-error/236597
          # https://www.home-assistant.io/integrations/camera/#service-snapshot
          filename: '/tmp/snapshot_{{ camera_entity_id }}.jpg'

  test_notification:
    sequence:
      - service: persistent_notification.create
        data:
          title: "Script Context Test"
          message: >-
            {% from 'util.jinja' import get_triggered_by_details %}
            {% set triggered_by = get_triggered_by_details(this.context) %}
            {{ triggered_by ~ '\n\n context: ' ~ (context.id, context.parent_id, context.user_id) ~ '\n\n this.context: ' ~ (this.context.id, this.context.parent_id, this.context.user_id) ~ '\n\n states.context: ' ~ (states.context.id, states.context.parent_id, states.context.user_id) }}

  test_actionable_notification_action_data:
    sequence:
      - service: notify.mobile_app_ceres
        data:
          title: Test Action Data
          message: Testing
          data:
            actions:
              - action: TEST
                title: Test
            action_data:
              foo: "{{ states('input_boolean.test') }}"
              qux: "{{ ['foo', 'bar'] }}"
      - wait_for_trigger:
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: TEST
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 1"
          message: >-
            {{ wait.trigger }}
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 2"
          message: >-
            {{ wait.trigger.event }}
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 3"
          message: >-
            {{ wait.trigger.event.data }}
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 4"
          message: >-
            {{ wait.trigger.event.data.action_data.foo }}
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 5"
          message: >-
            {{ wait.trigger.event.data.action_data.qux | length }}
      - service: persistent_notification.create
        data:
          title: "Script: Action Data 6"
          message: >-
            {{ wait.trigger.event.data.action_data.qux }}

automation:
  - alias: "Handle Actionable Notification Action Data Event"
    id: "1a3eac29-c988-4117-a768-2fb940b546f6"
    initial_state: true
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: TEST
    action:
      - service: persistent_notification.create
        data:
          title: "Automation: Action Data"
          message: >-
            {{ trigger.event.data.action_data.foo }}

  - alias: "Battery Event Test"
    id: "af2a77e9-483f-4391-abe8-401c19c4baf0"
    initial_state: false
    trigger:
      - platform: event
        event_type: state_changed
    mode: single
    condition:
      - condition: template
        # https://www.home-assistant.io/docs/configuration/events/#state_changed
        value_template: "{{ trigger.event.data.entity_id in state_attr('sensor.monitored_batteries', 'batteries') }}"
    action:
      - service: system_log.write
        data:
          message: "{{ trigger.event }}"
          level: debug
          logger: "homeassistant.components.automation"
      # - service: notify.mobile_app_ceres
      #   data:
      #     title: "Batteries Test"
      #     message: "{{ trigger.event }}"
      #     data:
      #       group: "test"
      #       url: homeassistant://navigate/lovelace-system/devices
      - service: persistent_notification.create
        data:
          title: "Batteries Test"
          message: "{{ trigger.event }}"
      - service: automation.turn_off
        target:
          entity_id: "{{ this.entity_id }}"

  - alias: "Test Trigger Context"
    id: "a91edab1-0b60-40c1-89fa-cdf8a8112bd4"
    initial_state: false
    trigger:
      - platform: time_pattern
        seconds: "/1"
    action:
      - service: persistent_notification.create
        data:
          title: "Automation Context Test"
          # one can look at this under the automation trace, actually... (one needs a unique id for the automation)
          message: >-
            {% from 'util.jinja' import get_triggered_by_details %}
            {% set triggered_by = get_triggered_by_details(this.context) %}
            {{ triggered_by ~ '\n\n context: ' ~ (context.id, context.parent_id, context.user_id) ~ '\n\n this.context: ' ~ (this.context.id, this.context.parent_id, this.context.user_id) ~ '\n\n states.context: ' ~ (states.context.id, states.context.parent_id, states.context.user_id) }}
      - service: script.test_notification
      - service: automation.turn_off
        target:
          entity_id: "{{ this.entity_id }}"

  - alias: "Alarm Control Panel State Changes"
    id: "e4a1a7ac-27d1-430a-aec4-8047b32136de"
    initial_state: true
    trigger:
      - platform: state
        entity_id: alarm_control_panel.test
    action:
      - service: notify.mobile_app_ceres
        data:
          title: "Alarm Control Panel Test"
          message: "{{ trigger.from_state.state }} â†’ {{ trigger.to_state.state }}"
          data:
            url: homeassistant://navigate/lovelace-test/test

  # - alias: "A Faulty Automation"
  #   id: "361d81b6-cb07-4df3-b3c8-baed2da7072d"
  #   initial_state: false
  #   trigger:
  #     - platform: time_pattern
  #       seconds: "/15"
  #   action:
  #     - foo: bar

  - alias: "Test Shelly BLU Button Double Press"
    id: "63c6b6ad-03fd-42b1-a4e1-2173993f714d"
    trigger:
      - platform: state
        entity_id: event.button_1_new_button
        # only trigger on the state
        to: null
        # this doesn't change if you keep double pressing
        # attribute: event_type
        # to: 'double_press'
      # i hate device ids...
      # - platform: event
      #   event_type: bthome_ble_event
      #   event_data:
      #     device_id: 07ff6c37223aa846f993a0f60d0ca246
      #     event_class: button
      #     event_type: double_press
    condition:
      # - condition: state
      #   # templating not supported here
      #   entity_id: event.button_1_new_button
      #   attribute: event_type
      #   state: double_press
      - condition: template
        value_template: "{{ state_attr(trigger.entity_id, 'event_type') == 'double_press' }}"
    action:
      # - service: persistent_notification.create
      #   data:
      #     title: "Shelly BLU Button"
      #     message: "Double press detected!"
      - service: light.toggle
        target:
          entity_id: light.dining_room

  - alias: "Test Shelly BLU Button Toggle"
    id: "cca5b81c-e80a-475f-8436-bbea3e93c4ec"
    initial_state: true
    use_blueprint:
      path: shelly_bt_button.yaml
      input:
        event_entity_id: event.button_1_new_button
        light_entity_id: light.dining_room
        single_press_profile: normal_shelly_duo
        double_press_profile: night_shelly_duo_rgb
        triple_press_profile: bright_shelly_duo
