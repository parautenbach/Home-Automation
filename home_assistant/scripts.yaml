noop:
  sequence:
    - service: shell_command.noop

hk_3380_power_off:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABIZQTEhMSExITEhMSExITExI3ExITExMSExITNxM2EzcTEhM3EzcTNxM3EzYTExITEzcTExITEhMTExMSEzcTNxITEgAFpgABJ0kTAA0FAAAAAAAAAAA=

hk_3380_power_on:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABIZMTExITExITEhMSExITEhM3ExITEhMTEhMSNxM3EzcTEhMSExITExITExITEhM3EzcTNxM3EzcTNxM3EzcTEhMSEwAFqgABJEcUAA0FAAAAAAAAAAA=

hk_3380_vid1:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABIpMTExITExITEhMSExITEhM3ExITEhMTEhMSNxM3EzcTEhMSEzcTEhM3ExITEhM3EzgTNxITEzcSFBI3EzcTEhMSEwAFpQABKEkTAA0FAAAAAAAAAAA=

hk_3380_vid2:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABIpQTEhMSExITEhMSExMSExM2ExMSExMSExITNxM3EjcTExI3EzcTEhM3ExITEhM3EzgTEhMSEzcTExM3EzYTExITEwAFpgABJkoSAA0FAAAAAAAAAAA=

hk_3380_dimmer:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABI5MTEhMSExITEhMSExMSExM3EhMTEhMSExITNxM3EzYTExITExITNxM3EjcTEhM3EzgTNxM3EhMSFBMSEzcSExMSEwAFpQABJ0kUAA0FAAAAAAAAAAA=

hk_3380_vol_up:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABI5MTEhMSExITExITExITEhM3ExITEhMSExITNxM3EzcTEhM3EjcTNxMSExMSExM2EzgTEhMSExMSOBM3EzcTEhMSEwAFpwABJkkTAA0FAAAAAAAAAAA=

hk_3380_vol_up_plus_5:
  mode: queued
  sequence:
    - repeat:
        count: 5
        sequence:
          - service: script.hk_3380_vol_up

hk_3380_vol_down:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABI5MTEhMSExMSExMSExITEhM3ExITEhMSExITNxM3EzcTEhMSExITEhM3ExITEhM3EzgTNxM3EjcTExM3EzcTEhMSEwAFpgABJ0gUAA0FAAAAAAAAAAA=

hk_3380_vol_down_minus_5:
  mode: queued
  sequence:
    - repeat:
        count: 5
        sequence:
          - service: script.hk_3380_vol_down

hk_3380_mute:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABI5ITEhMTEhMTEhMSExITEhM3ExITEhMSExMSNxM3EzcTEhM3ExITEhMSExMSExI3EzgTEhM3EzcTOBI3EzcTEhMTEgAFpgABJ0oSAA0FAAAAAAAAAAA=

dstv_power:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcCDwHKghbBysHKggqBzwHAAGSCB0HTgcZByoHGQdcBxgIGAcACkIKGgg7CigHXAcqCCoIKgc8BwABkggcCCoHPAooBxkHWwcZBxgIAAXqBx0HPAcrB1sIKgcqCCoHPAgAAZEIHQcmB0EHKgcZB1wHGAgYBwANBQ==

dstv_ch_plus:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB6AAYcBz0IKQlaBysHKgkpCTgJAAGTCBwHUwcYBysJOgc0CBcKFgkACkMEHgU+CycJWgsmBysKJwk7CQABkAcdBy8KOgcqCTsKMAYaCRYKAAGQBx0JOgcrClkJBwkYBiwJKAc9CQABkAkbBysGQggpCTsJMQcZBxgKAA0FAAAAAAAAAAAAAAAAAAA=

dstv_ch_minus:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQbCDwIKQdcByoIKgcrBzwHAAGSCBwHWAcYCCoIOwcvBxkHGAkACkEKGAk8BysJWgkoBysIKQk7CQABkAcdCTEIPAcqCDwILgcZBxgKAAGPCRsJOwkoB1wJKQcqBykLOgcAAZIJGwguCEAIKgg7CiwIGAcZCAANBQ==

dstv_vol_up:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcCDwHKgdcBysHKgcrBzwHAAGSCBwIGAkXByoIPAcmBxgHGQcACkIHHQc8CCoHXAcqCSkHKgc9BwABkgcdBzwIPAcqCDwHJgcYCBgHAAGSBxsLOggqB1wHKgcrByoIPAcAAZIIHAc4B0EHKgg8ByYHGQcYBwANBQ==

dstv_vol_down:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB8AAQcCDwHKwdcByoHKgcrBzwHAAGSChsHWwgYByoIPAcqCBgHGQcACkMIGwg8ByoIWwkpByoIKgc8BwABkggdBzgHPAcrBzwHKwcYBxkHAAGSBx0HPQcqB1wHKggqBysHPAcAAZIIHAgzBz8LKAg8ByoIGAcZBwAJ/ggADQUAAAAAAAAAAAAAAAA=

dstv_mute:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcCDwHKghbBysHKgcqCTsIAAGSBx0HWwgYBysHGAhOBxgIGAcACkUFHAg8ByoIWwgqByoIKgc8CAABkQgbCzYHPAcpCRgHTwgXBxkHAAGSBx0HPAgqB1wHKggqByoIPAcAAZIHHQc0B0AIKgcZB04HGQcYBwANBQ==

dstv_alt:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQbCDwHKghbCCoIKQgqBzwIAAGSBx0HLwcYCCoHLwcdBxkHGAgACkIJGwc9ByoHXAkpByoHKwc7CQABkQkbCVEIPAcqCC4IHAgYBxkHAAGSCBoLOggqB1wHKggqByoJOwcAAZIJGwhOB0EIKQcvBx0IGAcYCAANBQ==

dstv_info:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAUbCDsKKAdbCSkHKwkoCjoHAAGSCxkJKQgXBysJOgdcCRYJFwcACkMREwk7ByoHXAkpByoJKQc8CQABkAgbCU4HPAcrCDsIWwcZBxgIAAGRCBwIPAgqB1sJKQkoCSkHPggAAZAHHQhJCT4IKAs6CV4EGAkXBwANBQ==

dstv_back:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAcZCToHKwlZCigKJwgpBz4NAAGMCRsIKQ4WCCoJOwZYCBcJFwcACkINFwo6CSgKWQkpCSgJKQc8BwABkgcdB1MJOwkoCjoFWQcZChUHAAO+Bx0GPgkoB1wLJwkoBysKOQoAAY8LGghNB0EJKAc9CVUJFwkWBwANBQ==

dstv_ok:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQdBzwIKgdcCCkJKQcqCDwHAAGSBx0HPAgYBysHPAlIBxkHGAgACkQPEgg8ByoIWwgqCCkIKgc8BwABkggcCRcHPAgqCDsISQgXCxYHAAGSCBwHPAgqB1sIKgkpByoHPAgAAZIHHQdcB0EJKAc8CEkJFwgYBwANBQ==

dstv_left:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcBz0GLAZdBysFKwcrBj4FAAGVBR0HNwkXCCsIPAZPBhkHGAcACkUFHQc9ByoHXAcqBysHKgg8BwABlAUdB1wHPAkpBz0HTgcYCBgHAAGSCBwIPAcqCFsIKgcqBysHPAkAAZEHHQdXB0EHKwc8B04IGAcZBwANBQ==

dstv_right:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAUbBzwIKghbByoIKgcqCDwHAAGSBx0HSgcZByoJOwc8BxkHGAgACkIHHAg8ByoIWwkpBygLKQc8CAABkgcbCiUHPAgqBzwIPAcYCBgGAAGTCRsHPAgqB1wHKggqByoIPAcAAZMGHQciB0EHKgc9BzwHGQcYCAANBQ==

dstv_up:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcBz0HKghbCCoHKgcrBzwHAAGSCRsIMwcYCCoHPQdSCBgHGQcACkIIHAc9ByoHXAcqCCoHKwc8BwABkggcCFcHPAgqBzwIUgcZBxgIAAO+CBwHPAcrB1sIKgcrByoHPAgAAZIHHQdTB0EHKgc9B1IIGAcZBwANBQ==

dstv_down:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAUdBzwHKwdbCCoHKgkpBzwIAAGSBx0HTgcZByoIPAc4BxgIGAcACkIHHQc8CCoHXAcqCSkHKgg8BwABkgcdBysHPAcrBzwINwcZBxgIAAgVCB0HOwopB1sIKgcqCCoHPAgAAZIHHQcmB0EHKgc9BzgHGAcZBwANBQ==

dstv_0:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB2AAUaBz0NJAdcCicIKgYsBj0JAAGRBxwISQgYCSgHGQcZCRYGGgUACkUJGgo6ByoKWQkpCSgHKwk6CQABkAceCSMJOwcrCRYHGQkWBxoFAAXrBx0KOgkoB1wLJwkpByoJOgkAAZAIHQciBUIJKQkXBxgJNgcADQUAAA==

dstv_1:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB0AAQbCTwGKgpZByoIKgkpCToGAAGTBx0JRAoVCSkJFwkbCBcGGgUACkUJGgg8CCkGXQooCSgKKAk6BgABlAkbByEHPQkoCzkJFwUaBwADwwQeBzsFLAZdBysJKAsnBT4GAAGUCBwJHAVCCSgHGQoaBhoFAA0FAAAAAA==

dstv_2:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB2AAgWCjsHKwlZCycJKAkpCjkLAAGPChoHQQcZCSgHGQVDBxkFAApECRsJOwkoB1wIKQkpBSwHPQkAAZAJGwkbBz0HKgcZCR8IGQYZBwABkgkbBzwJKQhbCyYHKwcqBj4KAAGPCQcGDQkXB0EJKQcZCCAJFwkADQUAAA==

dstv_3:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQbCTwHKgdcByoJKQcqCDwHAAGSCBwJOwcYCCoHGAgmBxgIGAcACkMHHAg8ByoKVwkrCSgIKgc8BwABkgkbCBgHPAgqBxkHJgcYBxkHAAGSCBwHPAgqB1wHKggqByoIPAcAAZIHHQhbB0EHKggYCCUHGQcYCAANBQ==

dstv_4:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQdBzwIKgdcByoIKgcqCDwHAAGSCBwINwkXByoIGAcrBxgJFwcACkMJGgg8ByoIWwsnByoIKgc8CQABkAgdCVoJOgkpCRYGKgsWChYHAAGSCRsIPAkoB1wLJwkoCigHPAkAAZALGgdXCT8JKAsVBiwJFgYaCgANBQ==

dstv_5:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB2AAQdCDsJKQpYCigJKQonBz0JAAGRBh0MLgoWCCoHGAcvChYHGAkACkMGGwc9ByoHXAkpCSgKKAU+BwABkgkcCVUHPAooDRIJLQgYBhoJAAGQCxkKOQ8jB1wJKAkpCicHPQcAAZIJGwdTCz0JKQkWBy8KFgkADQUAAA==

dstv_6:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcCTsHKglaCSkMJQcrBzwLAAGPCBwHLwcZBisJFgoxChYJFgcACkQGHQc7CygHXAcqBysHKgo6BwABkgkbClAJOggqBxkIMgcZBxgIAAGSCBwHPAcrB1wHKgcrCicJOwcAAZIIHAdODDwHKwcYCDMJFwoVBwANBQ==

dstv_7:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAQcBzwIKgdcCCkIKgcrCjkHAAGSCRsIKgcYCCoHGQc4CBcHGQcACkQNFQo6CCkJWgcrCCkKKAc8CQABkQccCU0JOgooCBcIOAoVBxkHAAGSBx0JOwonCVoIKQooBysHPAYAAZMJGwdKCj4HKwcYBzgHGQcZBQANBQ==

dstv_8:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB2AAYaBzwJKQdcCCkIKgcqCDwJAAGQCRsHJgkXByoIGAk7BxgHGQcACkIJGwg7BysJWgkpByoHKwc8CQABkAoaCkcHPQkoChYHPAkXBxkHAAGSCBwIOwooB1wKJwkpCCkHPQkAAZAJGwpDCT8JKAkXBzwJFwgADQUAAA==

dstv_9:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAgXBz0IKQhbCCkJKQgpCDwHAAGSBx0JIAkWBysHGQk+CBgHGQgACkEJGwo6CCkHXAcrByoKKAg7BwABkgsZB0YHPAkpChUGQggYBxkHAAGSChoHPAsnB1wJKAooCSgHPQcAAZMGHQk/CT8JKQkWB0EHGQcYBwANBQ==

dstv_menu:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgB4AAUaCToKKAdcCSgJKQkoCjoHAAGSChoHKwoVCigHIgYwCRYJFwkACkEJGwk6CigJWgonCycJKAo6CgABjwkbCkwKOQkpByEHLwoWCRcHAAgWChsHPAkpClgKKAkpCSgJPAgAAZAJGwlICEALJgseBy8JFwcYBgANBQ==

apple_tv_menu:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABJpUTEhI3EzYUNhMSEjcUNhM3EjYTNxI3ExISExMTEhITNxI4EjcTERQSEhQSExETExMTNhMSEhMTEhIUERMSExITEgAFlQABJkoTAA0FAAAAAAAAAAA=

apple_tv_home:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCoAAABJpURExM3EjcSNxITEzcSNxI3FDYTNhQ1FBEUEhIUEhISNxI3FDcTERMSExMRExQTERMSNxMTERMSExITExMTEhITEgAFlAABKEkTAAxOAAEnShIADE8AASdJFAAMTQABJ0oSAAxPAAEnShIADE8AASdJEwAMTwABJ0kTAAxOAAEnShIADE8AAShIFAAMTgABJ0kSAAxPAAEoSRMADE4AASZKEwANBQ==

apple_tv_home_double_press:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: home
        num_repeats: 2
        delay_secs: 0.1

apple_tv_ok:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCYAAABKJsRFRE5EDoROBMTEjgSORE5EDoRORI4EhQQFRAVEBUQOhIUEBURORE5ETkQFRE5EhQROBEVERUPFRAVERQRFRAUEQAFTQABJ5wRFBE5EjkQOhEUETkRORI5EToQORI4ERUQFBMTEBUROg86ERQSOBITEhQQFRAWDxUROREVEBURExEVEBUQFg8WDwAFTgABKEsRAA0F"

apple_tv_up:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABJ5QTExE3EzcTNxITEjYUNhM2EzYTOBE3ExMRFBISExIUNxISEjcTEhM4ERMSExMTERMSNxURExISFBEUEhMRExMSEwAFlAABJ0oTAA0FAAAAAAAAAAA=

apple_tv_down:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABJ5QUEhE3FDYSNxQREjgSNxI3EzcSNxQ1ExMUEBQSEhMSNxIUERMTNhM3ExMRExMSExITNxMTERQRExMTERQRExMTEgAFlAABJ0oTAA0FAAAAAAAAAAA=

apple_tv_left:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABKJMSExM3EzYSNxQSEjYUNhI3FDYUNRI4ExISExMSExITNhM2FBITEhI3EhQRExMSFBITNhMSEhMTExMSEhMSEhMTEgAFlAABKEkTAA0FAAAAAAAAAAA=

apple_tv_right:
  mode: queued
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABJ5MUEhI3EjcTNxIUEzUTNhQ2EjcTNhQ2ExMRFBMSEhITNxIUETcTNhMSExQRExUQFBESNxQSEhMSExMSERQTEhITEgAFlQABJ0kXAA0FAAAAAAAAAAA=

apple_tv_play_pause:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCYAAABKZoSExE6EDoQOhIUEDoQOhA6EDoQOhQ2EhQSExAVEBUQOhE5EjgSOBE6ETkSFBE4EhMSORITEhMQFREUERUQFBIUEAAFTQABJ5wSExE6EjgQOhEUETkSOBI5EDoQOhI4EhMSExEVERUQORE5EhQQNhYSERUQFREVEBUROBITEhQPFRIUEBUQFg8VEAAFTgABJ0wQAA0F"

apple_tv_skip_backward:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABJpUSNxIUETcTEhMTEjcSNxQ2EjcSNxM3EhQSEhMSExISNxM3ExMRNxITFBITNhITEhMSNxMSFBITEhIUExATExMSEwAFlAABJ0kTAA0FAAAAAAAAAAA=

apple_tv_skip_forward:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBQAAABKJMTNRQTEzYUEhISEjgSNxI3EzYTNxI3FBISExISFBITNhI3EzYUEhMSExMSNhIUERMTNxQRExMRExIUEhMRFBQQEwAFlAABJ0oSAA0FAAAAAAAAAAA=

samsung_tv_power:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCMAJCUEzYTNxI3ExISExMSExITEhM2EzcSOBMRExISExMSExISExM2ExITEhITExISExISEjgTEhI3FDYTNxM2FDYTNxIABgOUlBM3EjcTNxITEhITEhITEhMTNxM2EzcTEhMSEhMTERMSEhMSOBITEhITEhITEhMSExI3ExITNxI4EzYTNxM2EzcTAA0FAAAAAAAAAAAAAAAA"

samsung_tv_power_on:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBGAJKVETkRORA6ERQRFBEUERQRFBE5ETkQOhAVEBUQFREUEBUQOhEUERQRORE5EBURFBA6EBUQOhE5EBUQFRA6EDoRFBEADQUAAA==

samsung_tv_power_off:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBGAJOVEDoQOhA6DxYPFhAVEBUQFRA6ETkROREUERQRFBEUEBUQFREUERQRORE5EBUQFRE5ETkRORE5ERUQFRA6DzsPFhAADQUAAA==

samsung_tv_hdmi:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCMAI+UEjgTNxM2EhMTEhITEhMSEhM3EzcTNhMSExISExMSEhMSNxM3EhMSNxMSEhMSExI4EhITEhI4EhMTNhM3EjgTERMABgKVkxM3EzcSNxMSEhMSExISExISOBI4EjcSExITExISExMREzcSOBITEjcSExITExITNhMSExISOBITEjcTNxM3ExETAA0FAAAAAAAAAAAAAAAA"

samsung_tv_hdmi1:
  # https://github.com/yahat/broadlink_mini_homeassistant_ir_codes_samsung_tv
  # old:
  # https://community.home-assistant.io/t/broadlink-rm-mini-3-code-database-samsung-tv-hdmi-selection/15612/100 (old)
  # sat
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBGAJKVETkRORE5ERQQFRAVERQQFRE5ETkROREUERQRFBEUERQRORAVERUPOxAVDzsQOhA6EBUQOhA6EBUQOhAVEBUPFhAADQUAAA==

samsung_tv_hdmi2:
  # atv
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgBGAJOUETkRORA6ERQQFRAVERQRFBA6ETkROhAVDxYQFQ8WEBUQFQ87EDoRORA6DzsQFRA6DzsPFhAVDxYQFRAVEDoQFRAADQUAAA==

samsung_tv_picture_mode:
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room_remote
        command:
          - b64:JgCMAI+UEzcSOBM2EhMTEhMSEhMSEhM3EjgTNxISExITEhMSExITEhMRExITNxMSEjgSEhMSEjgTNhQ2ExITNxITEjcTNxIABgOVkxM3EzYTNxMSExISEhMSExISOBI3EzcTEhMSExITERMSEhMTEhMSEzYTEhI4ExISExM3EjcTNhMSEjgSExM2EzcSAA0FAAAAAAAAAAAAAAAA"

entertainment_apple_tv_on:
  mode: single
  sequence:
    - service: input_select.select_option
      target:
        entity_id: input_select.selected_remote
      data:
        option: Apple TV
    - service: script.turn_on
      entity_id: script.samsung_tv_power_on
    - delay: "00:00:01"
    - service: script.turn_on
      entity_id: script.hk_3380_power_on
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: wakeup
    - delay: "00:00:05"
    - service: script.turn_on
      entity_id: script.samsung_tv_hdmi2

entertainment_satellite_on:
  mode: single
  sequence:
    - service: input_select.select_option
      target:
        entity_id: input_select.selected_remote
      data:
        option: Satellite
    - service: script.turn_on
      entity_id: script.samsung_tv_power_on
    - delay: "00:00:01"
    - service: script.turn_on
      entity_id: script.hk_3380_power_on
    - delay: "00:00:01"
    - service: script.turn_on
      entity_id: script.dstv_power
    - delay: "00:00:05"
    - service: script.turn_on
      entity_id: script.samsung_tv_hdmi1

entertainment_off:
  mode: single
  sequence:
    - service: input_select.select_option
      target:
        entity_id: input_select.selected_remote
      data:
        option: Audio
    - service: script.turn_on
      entity_id: script.samsung_tv_power_off
    - delay: "00:00:01"
    - service: script.turn_on
      entity_id: script.hk_3380_power_off
    # state is idle when not playing or off (suspended)
    # in that case, just let it turn off automatically
    # we just want to stop anything currently playing (e.g. streaming music) to stop
    - condition: state
      entity_id: media_player.living_room
      state: "playing"
    # https://github.com/postlund/pyatv/blob/6018ba22851287afaf7c99dafa42de5766b97acf/pyatv/interface.py#L94
    # the proper way to turn it off
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: home_hold
    - delay: "00:00:02"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: select

play_radio_paradise:
  mode: single
  sequence:
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: top_menu
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: top_menu
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: right
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: right
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: right
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: down
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: down
    - delay: "00:00:01"
    - service: remote.send_command
      data:
        entity_id: remote.living_room
        command: select
    - delay: "00:00:03"
    - service: media_player.media_play
      data:
        entity_id: media_player.living_room

security_camera_record_clip:
  # todo: fire a custom event to catch in another automation and turn on the light (if dark and not already on, etc.)
  mode: queued
  sequence:
    - service: input_datetime.set_datetime
      entity_id: input_datetime.security_camera_last_clip
      data:
        datetime: "{{ now() }}"
    - service: camera.record
      # https://github.com/home-assistant/core/issues/40241
      # entity_id: camera.security_camera
      data:
        entity_id: camera.security_camera
        # https://community.home-assistant.io/t/referencing-entity-id-causing-a-template-error/236597
        # filename: '/tmp/{{ entity_id.entity_id }}_{{ now().strftime("%Y%m%d-%H%M%S") }}.mp4'
        filename: '/tmp/camera.security_camera_{{ now().strftime("%Y%m%d-%H%M%S") }}.mp4'
        duration: 10
    - delay: "00:00:15"
    - service: shell_command.copy_last_video_clip

security_camera_create_snapshot:
  # https://www.reddit.com/r/homeassistant/comments/9fz5e4/show_the_x_most_recent_pictures_in_a_directory/e69alpc/
  mode: queued
  sequence:
    - service: input_datetime.set_datetime
      entity_id: input_datetime.security_camera_last_snapshot
      data:
        datetime: "{{ now() }}"
    - service: camera.snapshot
      # https://github.com/home-assistant/core/issues/40241
      # entity_id: camera.security_camera
      data:
        entity_id: camera.security_camera
        # https://community.home-assistant.io/t/referencing-entity-id-causing-a-template-error/236597
        # filename: '/tmp/{{ entity_id.entity_id }}_{{ now().strftime("%Y%m%d-%H%M%S") }}.jpg'
        filename: '/tmp/camera.security_camera_{{ now().strftime("%Y%m%d-%H%M%S") }}.jpg'
    - service: shell_command.copy_last_snapshot_image
    - condition: state
      entity_id: group.security_automations
      state: "on"
    - service: notify.family
      data:
        title: Security Camera
        message: "Motion detected!"
        data:
          group: "security-camera-snapshots"
          attachment:
            # url: https://geoexpressinternational.com/wp-content/plugins/webp-express/test/test-pattern-tv.jpg
            # url: http://securitypi.local/local/camera.security_camera_last.jpg
            url: !secret security_camera_last_snapshot_url
            # content-type: jpg
            # hide-thumbnail: false

send_pieter_work_cape_town_to_home_eta:
  mode: single
  sequence:
    - service: notify.family
      data:
        title: Home ETA
        message: "Pieter left work and will be home at {{ (now().timestamp() + (states('sensor.google_travel_time') | float)*60) | timestamp_custom('%H:%M', True) }}."

open_pedestrian_gap:
  mode: single
  sequence:
    - condition: state
      entity_id: cover.main_gate
      state: "closed"
    - service: switch.turn_on
      entity_id: switch.gate_remote
    - delay: "00:00:05"
    - service: switch.turn_on
      entity_id: switch.gate_remote

close_garage_door_and_main_gate:
  description: "Close the applicable garage door if it's open and also the main gate if it's open"
  fields:
    garage_door:
      description: "A cover entity"
      example: "cover.garage_door"
  mode: single
  sequence:
    # https://www.home-assistant.io/docs/scripts/conditions/
    - condition: template
      value_template: "{{ states(garage_door) == 'open' }}"
    - service: cover.close_cover
      data:
        entity_id: "{{ garage_door }}"
    - condition: state
      entity_id: cover.main_gate
      state: "open"
    - service: cover.close_cover
      entity_id: cover.main_gate

turn_on_light_and_timer:
  description: "Turn on a light and its corresponding timer"
  fields:
    light:
      description: "A light entity"
      example: "light.my_light"
    duration:
      description: "A duration in %H:%M:%S format"
      example: "00:03:00"
  mode: single
  sequence:
    # https://www.home-assistant.io/docs/scripts/conditions/
    - service: light.turn_on
      data:
        entity_id: "{{ light }}"
    - service: timer.start
      data:
        entity_id: "{{ light | replace('light.', 'timer.') }}_timer"
        duration: "{{ duration }}"

force_on_smart_bulb:
  description: "Force a smart bulb to turn on"
  fields:
    light:
      description: "A smart bulb"
      example: "light.my_smart_bulb"
  mode: parallel
  sequence:
    - service: input_boolean.turn_on
      data:
        entity_id: "{{ light | replace('light.', 'input_boolean.') }}_state"
    - service: light.turn_on
      data:
        entity_id: "{{ light }}"

turn_on_light:
  description: "Turn on a light using the specified profile when turned on"
  fields:
    light:
      description: "A light entity"
      example: "light.my_light"
    profile:
      description: "A light profile"
      example: "normal/night/security"
  mode: parallel
  sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ light }}"
      data:
        profile: "{{ profile }}"

toggle_light:
  # todo: timer variable?
  description: "Toggle a light using the specified profile when turned on"
  fields:
    light:
      description: "A light entity"
      example: "light.my_light"
    profile:
      description: "A light profile"
      example: "normal/night/security"
  mode: parallel
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ is_state(light, 'off') }}"
          sequence:
            - service: light.turn_on
              target:
                entity_id: "{{ light }}"
              data:
                profile: "{{ profile }}"
      default:
        - service: light.turn_off
          target:
            entity_id: "{{ light }}"

test_foyer_light:
  fields:
    profile:
      description: "A light profile"
  sequence:
    - service: persistent_notification.create
      data:
        title: "Testing"
        message: "Test: '{{ profile }}'"
    - service: light.turn_on
      target:
        entity_id: light.foyer
      data:
        # entity_id: light.foyer
        profile: "{{ profile }}"

shutdown_remote_host:
  description: "Shut down a remote host via SSH"
  # assumes ssh keys and a config map is set up
  # https://askubuntu.com/questions/191257/how-could-i-shutdown-a-remote-host-in-my-network-thru-ssh-with-a-local-host
  fields:
    name:
      description: "A display name for the host"
      example: "example.local"
    host:
      description: "The host as defined in the SSH config map"
      example: "some_host"
  mode: parallel
  sequence:
    - service: shell_command.shudown_remote_host
      data:
        host: "{{ host }}"
    - delay:
        seconds: 5
    - service: homeassistant.update_entity
      data:
        entity_id: "binary_sensor.{{ host }}"
    - service: persistent_notification.create
      data:
        title: System
        message: >-
          {% set user_id = states.script.shutdown_remote_host.context.user_id %}
          {% set triggered_by = (states.person | selectattr('attributes.user_id','==', user_id)) | list | first or "system" %}
          {% set first_name = "System" if triggered_by == "system" else state_attr(triggered_by.entity_id, "friendly_name").split()[0] %}
          {{ first_name }} shut down {{ name }}.

make_backup:
  description: "Backup Home Assistant"
  mode: single
  sequence:
    - service: shell_command.make_backup
    - service: homeassistant.update_entity
      data:
        entity_id: sensor.home_assistant

test:
  description: "Test script"
  fields:
    param1:
      description: "Parameter 1"
      example: "Any text"
  sequence:
    - choose:
        - conditions:
            # duh
            # https://community.home-assistant.io/t/using-a-script-variable-field-in-a-choose-action/297289/2?u=parautenbach
            - condition: template
              value_template: "{{ param1 is not defined }}"
          sequence:
            - service: persistent_notification.create
              data:
                title: "Testing"
                message: "Test: no param"
      default:
        - service: persistent_notification.create
          data:
            title: "Testing"
            message: "Test: '{{ param1 }}'"

test_snapshot:
  sequence:
    - service: camera.snapshot
      # https://github.com/home-assistant/core/issues/40241
      entity_id: camera.security_camera
      data:
        entity_id: camera.security_camera
        # https://community.home-assistant.io/t/referencing-entity-id-causing-a-template-error/236597
        # https://www.home-assistant.io/integrations/camera/#service-snapshot
        filename: '/tmp/snapshot_{{ entity_id.name }}.jpg'
