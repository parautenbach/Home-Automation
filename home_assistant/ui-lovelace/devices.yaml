title: Devices
path: devices
icon: mdi:devices
visible:
  - user: 75cfafa25f36464abc9116845e53f2ca
badges:
  - entity: binary_sensor.ha_updater
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $: |
                .value {
                  color: {{ "var(--state-binary_sensor-active-color)" if is_state(config.entity, 'on') }} !important;
                }
  - entity: binary_sensor.hacs_updater
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $: |
                .value {
                  color: {{ "var(--state-binary_sensor-active-color)" if is_state(config.entity, 'on') }} !important;
                }
  - entity: sensor.disabled_automations
  - entity: sensor.unavailable_entities
  - entity: sensor.watchman_missing_entities
  - entity: sensor.watchman_missing_services
cards:
  - type: vertical-stack
    cards:
    - type: entities
      show_header_toggle: false
      title: Presence Controls
      entities:
        - entity: input_boolean.pieter_present
          name: Pieter
        - entity: input_boolean.rouve_present
          name: Rouvé
    - type: glance
      entities:
        - entity: sensor.pieter_activity_type
          show_last_changed: true
        - entity: sensor.pieter_activity_confidence
          show_last_changed: true
        - entity: binary_sensor.pieter_driving
          show_last_changed: true
    - type: entities
      entities:
        - device_tracker.ceres
        - sensor.ceres_battery_level
        - sensor.ceres_battery_state
      title: Ceres
      icon: mdi:cellphone
      card_mod:
        style: |
          .icon {
            color: var(--paper-item-icon-color);
          }
      show_header_toggle: false
    - type: entities
      entities:
        - device_tracker.rouve
        - sensor.rouve_battery_level
        - sensor.rouve_battery_state
      title: Rouvé
      icon: mdi:cellphone
      card_mod:
        style: |
          .icon {
            color: var(--paper-item-icon-color);
          }
      show_header_toggle: false
    - type: entities
      title: Thor (WD Cloud Drive)
      icon: mdi:nas
      card_mod:
        style: |
          .icon {
            color: var(--paper-item-icon-color);
          }
      entities:
        - sensor.thor_disk_usage
    - type: markdown
      title: Devices
      content: "Double tap will restart; hold will shut down (where supported)."
    - type: custom:button-card
      entity: script.shutdown_all_remote_hosts
      name: Shutdown All
      icon: mdi:server
      size: 12%
      card_size: 1
      show_state: false
      show_label: false
      styles:
        icon:
          # https://community.home-assistant.io/t/lovelace-button-card/65981/791
          # https://community.home-assistant.io/t/lovelace-button-card/65981/798
          # https://community.home-assistant.io/t/fun-with-custom-button-card/238450
          - padding-right: 5px
          - padding-left: 85%
        name:
          - color: var(--paper-item-icon-color)
          - justify-self: start
        card:
          - padding: 1%
          - font-size: 12px
        grid:
          - grid-template-areas: '"i n"'
          - grid-template-rows: min-content
          - grid-template-columns: 4fr 5fr
      tap_action:
        action: none
      hold_action:
        action: call-service
        haptic: heavy
        service: script.shutdown_all_remote_hosts
        confirmation:
          text: "[[[ return `Are you sure you want to shut down all remote hosts?` ]]]"
    - type: horizontal-stack
      cards:
        - type: custom:button-card
          template: shutdown
          entity: binary_sensor.cctv
          icon: mdi:cctv
        - type: custom:button-card
          template: shutdown
          entity: binary_sensor.thor
          icon: mdi:nas
        - type: custom:button-card
          template: shutdown
          entity: binary_sensor.rasplex
          icon: mdi:plex
        - type: custom:button-card
          template: shutdown
          entity: binary_sensor.rasplay
          icon: mdi:music
    - type: horizontal-stack
      cards:
        - type: custom:button-card
          template: restart
          entity: binary_sensor.main_gate
          icon: mdi:gate
          variables:
            name: Main Gate
            switch_entity: switch.main_gate_restart
        - type: custom:button-card
          template: restart
          entity: binary_sensor.garage_doors
          icon: mdi:garage-variant
          variables:
            name: Garages
            switch_entity: switch.garage_doors_restart
        - type: custom:button-card
          template: restart
          entity: binary_sensor.irrigation_status
          icon: mdi:sprinkler-variant
          variables:
            name: Irrigation
            switch_entity: switch.irrigation_restart
        - type: custom:button-card
          template: restart
          entity: binary_sensor.power_meter
          icon: mdi:power-plug
          variables:
            name: Pwr Meter
            switch_entity: switch.electricity_pulse_counter_restart
        - type: custom:button-card
          template: restart
          entity: binary_sensor.office
          icon: mdi:briefcase
          variables:
            name: Office
            switch_entity: switch.office_restart
    - type: history-graph
      hours_to_show: 24
      entities:
        - entity: binary_sensor.front_extender
          name: Front Ext.
        - entity: binary_sensor.back_extender
          name: Back Ext.
        - entity: binary_sensor.cctv
        - entity: binary_sensor.doorbell_online
          name: Doorbell
        - entity: binary_sensor.thor
        - entity: binary_sensor.rasplex
        - entity: binary_sensor.rasplay
        - entity: binary_sensor.main_gate
        - entity: binary_sensor.garage_doors
          name: Garages
        - entity: binary_sensor.irrigation_status
          name: Irrigation
        - entity: binary_sensor.power_meter
          name: Pwr Meter
        - entity: binary_sensor.office
    - type: custom:battery-state-card
      title: Batteries
      filter:
        include:
          - name: "attributes.monitor"
            value: True
      sort:
        - "state"
        - "name"
    - type: logbook
      title: Major Automations
      hours_to_show: 24
      entities:
        # run ../scripts/list_all_automations.sh
        - automation.alert_if_garages_opened_or_closed_when_not_supposed_to
        - automation.alert_if_gate_opened_or_closed_when_not_supposed_to
        - automation.alert_vacation_end
        - automation.alert_vacation_start
        - automation.alert_when_cabinet_opened
        - automation.alert_when_smoke_detected
        - automation.away_mode
        - automation.backup_home_assistant
        - automation.backup_home_assistant_db
        - automation.backup_power_battery_critical_alert
        - automation.battery_event_test
        - automation.bedlamps_auto_on_upon_sunset_or_arrival
        - automation.bedlamps_off_after_sunrise
        - automation.bedlamps_on_upon_low_light
        - automation.bedlamps_on_upon_server_start
        - automation.blink_motion_indicator_while_recording
        - automation.change_on_air_status
        - automation.check_disk_space_on_the_home_assistant_server
        - automation.check_for_flat_batteries
        - automation.check_for_low_batteries
        - automation.clear_upcoming_loadshedding_notification
        - automation.close_cover_from_alert_action
        - automation.contractor_mode_disabled_alert
        - automation.contractor_mode_enabled_alert
        - automation.contractor_mode_still_enabled_alert
        - automation.cover_left_open_alert
        - automation.detect_when_extender_disconnected
        - automation.detect_when_extender_reconnected
        - automation.detect_when_solarassistant_mqtt_bridge_activity_ceases
        - automation.detect_when_solarassistant_mqtt_bridge_activity_resumes
        - automation.dim_bedside_lamp
        - automation.disable_contractor_mode
        - automation.disable_contractor_mode_from_alert_action
        - automation.disable_cover_timeout_from_alert_action
        - automation.disable_guest_mode_from_alert_action
        - automation.disable_guest_mode_when_getting_home
        - automation.download_dam_levels_data
        - automation.enable_contractor_mode
        - automation.enable_contractor_mode_from_alert_action
        - automation.enable_guest_mode_from_alert_action
        - automation.extend_cover_timeout_from_alert_action
        - automation.guest_mode_disabled_alert
        - automation.guest_mode_enabled_alert
        - automation.hallway_light_off_when_bedroom_lights_off
        - automation.high_fire_risk_notification
        - automation.high_inverter_load_alert
        - automation.high_uv_notification
        - automation.inside_lights_auto_on_upon_sunset_or_arrival
        - automation.lights_off_after_sunrise
        - automation.lights_off_when_loadshedding
        - automation.lights_on_upon_low_light
        - automation.loadshedding_forecast_notification
        - automation.low_server_battery
        - automation.notify_if_baby_monitor_is_offline
        - automation.notify_if_charge_point_setting_automation_state_was_changed
        - automation.notify_if_charge_shutdown_threshold_changed
        - automation.notify_if_cover_was_left_open
        - automation.notify_if_doorbell_is_offline
        - automation.notify_if_doorbell_rang
        - automation.notify_if_driving_state_changed
        - automation.notify_if_electricity_feed_status_changed
        - automation.notify_if_geyser_heating_for_long
        - automation.notify_if_grid_feed_status_changed
        - automation.notify_if_internet_status_changed
        - automation.notify_if_inverter_battery_temperature_high
        - automation.notify_if_inverter_battery_temperature_recovered
        - automation.notify_if_inverter_temperature_high
        - automation.notify_if_inverter_temperature_recovered
        - automation.notify_if_new_backup_found
        - automation.notify_if_no_recent_backup
        - automation.notify_if_server_load_high
        - automation.notify_if_too_far_below_charge_point_target
        - automation.notify_pieter_going_home_from_work_in_cape_town
        - automation.notify_when_extender_disconnected
        - automation.notify_when_irrigation_status_changed
        - automation.notify_when_monitored_battery_fully_charged
        - automation.notify_when_motion_detected_in_the_nursery
        - automation.notify_when_server_started_after_being_shut_down_automatically
        - automation.notify_when_solarassistant_mqtt_bridge_activity_ceased
        - automation.open_garage_door_when_arriving
        - automation.open_the_gate_when_arriving_home
        - automation.pollen_levels_update
        - automation.reset_battery_notification_governor
        - automation.restore_smart_bulb_statuses_after_power_restored
        - automation.revert_cleaning_day_lights
        - automation.save_last_smart_bulb_state
        - automation.see_mobile_devices
        - automation.send_backup_power_battery_update
        - automation.send_daily_solar_summary
        - automation.set_backup_power_warning_light_brightness
        - automation.set_charge_points
        - automation.set_dark_theme
        - automation.set_light_theme
        - automation.set_pieter_s_driving_state
        - automation.set_vacation
        - automation.shut_down_devices_before_loadshedding
        - automation.shut_down_gaia_notification
        - automation.shut_down_server
        - automation.start_a_full_irrigation_cycle
        - automation.start_cover_timer_when_opened
        - automation.start_loadshedding_timer
        - automation.stop_cover_timer_when_closed
        - automation.stop_light_timer_if_running_when_light_turned_off
        - automation.switch_garage_light_according_to_door_status_and_light_conditions
        - automation.switch_off_bedlamp_when_plugging_in_phone
        - automation.switch_off_bedroom_bedlamp_when_sleep_mode_enabled
        - automation.switch_off_light_when_timer_expires
        - automation.switch_on_front_door_light_when_any_cover_opened
        - automation.switch_on_inside_lights_when_unplugging_phone
        - automation.switch_on_lights_at_wake_up_time
        - automation.switch_on_lights_if_motion_is_detected
        - automation.switch_on_night_light_if_motion_is_detected
        - automation.switch_on_or_extend_front_door_light_when_cover_closed
        - automation.switch_on_the_front_door_light_when_arriving_home
        - automation.take_foyer_motion_snapshots
        - automation.test_trigger_context
        - automation.toggle_dining_room_light
        - automation.toggle_hallway_light
        - automation.toggle_pieter_s_bedside_lamp
        - automation.toggle_rouve_s_bedside_lamp
        - automation.turn_audio_on_when_apple_tv_turned_on
        - automation.turn_off_all_lights_from_alert_action
        - automation.turn_off_entertainment_system_when_idle_or_leaving_room
        - automation.turn_off_main_bedroom_media_player_when_idle
        - automation.turn_off_sleep_mode_from_alert_action
        - automation.upcoming_loadshedding_notification
        - automation.update_automations_when_power_status_changed
        - automation.update_backup_power_warning_light_if_grid_feed_status_changed
        - automation.update_db_size
        - automation.update_gaia_audio_input_in_use_alt
        - automation.update_gaia_bluetooth_audio_connection_status
        - automation.update_irrigation_full_cycle_runtime_timer
        - automation.update_irrigation_zone_timer
        - automation.update_security_camera_snapshot_gallery
        - automation.update_server_power_status
        - automation.update_timers_for_covers_on_startup
  - type: vertical-stack
    cards:
      - type: map
        entities:
          - device_tracker.ceres
          - device_tracker.rouve
      - type: history-graph
        title: Lights
        hours_to_show: 24
        entities:
          - entity: light.pieter_bedside
            name: Pieter's
          - entity: light.rouve_bedside
            name: Rouvé's
          - entity: light.bedroom_bedlamp
            name: Baby's
          - entity: light.kitchen_counter
            name: Kitchen Cntr
          - entity: light.living_room_lamp
            name: Living Room
          - entity: light.dining_room
            name: Dining Room
          - entity: light.hallway
            name: Hallway
          - entity: light.foyer
            name: Foyer
          - entity: light.front_door
            name: Front Door
          - entity: light.garage
            name: Garage
          - entity: light.backyard
            name: Backyard
      - type: custom:button-card
        show_label: true
        label: >
          [[[
            // https://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript
            function toTitleCase(str) {
              return str.replace('_', ' ').replace(
                /\w*/g,
                function(txt) {
                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
                }
              );
            }

            function createRow(key, value, rowId) {
              return `<tr>
                        <td class='left'>`
                          + toTitleCase(key) +
                     `  </td>
                        <td class='right'>`
                          + value +
                     `  </td>
                      </tr>`;
            }

            var domainCounts = {};
            var domain;
            var entityId;
            for (var entity in states) {
              [domain, entityId] = entity.split('.');
              if (domain in domainCounts) {
                domainCounts[domain] += 1;
              } else {
                domainCounts[domain] = 1;
              }
            }
            var rows = '';
            var rowCount = 0;
            var total = 0;
            var sortedKeys = Object.keys(domainCounts).sort();
            for (var key of sortedKeys) {
              var row = createRow(key, domainCounts[key], rowCount);
              total += domainCounts[key]
              rows += row;
              rowCount += 1;
            }
            rows += createRow('Total', total, rowCount);
            var table = `<table>
                           <thead>
                             <tr>
                               <th>Domain</th>
                               <th>Count</th>
                             </tr>
                           </thead>
                           <tbody>`
                             + rows +
                        `  </tbody>
                         </table>`;
            return table;
          ]]]
        styles:
          grid:
            - grid-template-areas: '"l"'
            - grid-template-rows: 1fr
            - grid-template-columns: 1fr
          card:
            - font-size: 14px
        card_mod:
          # https://github.com/home-assistant/frontend/blob/dev/src/resources/ha-style.ts
          # https://stackoverflow.com/questions/25006951/how-do-i-know-why-a-css-style-is-ignored
          style: |
            div {
              width: 100%;
              padding: 1em;
            }
            table {
              width: 100%;
              border-spacing: 0;
            }
            thead {
              background-color: var(--state-icon-color);
              color: var(--text-primary-color);
            }
            th:first-child, td:first-child {
              text-align: left;
            }
            th:last-child, td:last-child {
              text-align: right;
            }
            th, td {
              padding: 0.5ex 1ex 0.5ex 1ex;
            }
            th:first-child {
              border-top-left-radius: min(var(--ha-card-border-radius), 5px);
            }
            th:last-child {
              border-top-right-radius: min(var(--ha-card-border-radius), 5px);
            }
            tr:nth-child(even) {
              background-color: var(--secondary-background-color);
            }
            tr:last-child td:first-child {
              border-bottom-left-radius: min(var(--ha-card-border-radius), 5px);
            }
            tr:last-child td:last-child {
              border-bottom-right-radius: min(var(--ha-card-border-radius), 5px);
            }
            tr:last-child {
              font-weight: bold;
            }
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
      # https://github.com/thomasloven/lovelace-card-mod/issues/259
      # replacement above (:sadpanda:)
      # - type: markdown
      #   # https://community.home-assistant.io/t/sensor-count-the-installation-mine-is-bigger-than-yours-sensor/225959/27
      #   # title: Components
      #   # https://community.home-assistant.io/t/lovelace-card-with-an-icon-and-data-in-a-table/197783/6
      #   content: >
      #     Domain | Count
      #        :---|---:
      #     {% for domain in states | groupby('domain') -%}
      #       {%- set name = domain[0].replace('_', ' ') | title -%}
      #       **{{ name }}** | {{ states[domain[0]] | count }}
      #     {% endfor %}
      #     **Total** | {{ states | count }}
      #   card_mod:
      #     style:
      #       ha-markdown:
      #         $:
      #           ha-markdown-element: |
      #             table {
      #               border-spacing: 0;
      #               width: 100%;
      #               padding: 8px;
      #               border-radius: var(--ha-card-border-radius);
      #             }
      #             th {
      #               background-color: var(--state-icon-color);
      #               color: white;
      #               padding: 4px;
      #             }
      #             th:first-child {
      #               border-top-left-radius: min(var(--ha-card-border-radius)/2, 5px);
      #             }
      #             th:last-child {
      #               border-top-right-radius: min(var(--ha-card-border-radius)/2, 5px);
      #             }
      #             td {
      #               padding: 4px;
      #             }
      #             tr:nth-child(even) {
      #               background-color: var(--table-row-background-color);
      #             }
      # - type: custom:mini-graph-card
      #   entities:
      #     - entity: sensor.unavailable_entities
      #   hours_to_show: 24
      #   hour24: true
      #   smoothing: false
      #   points_per_hour: 60
      #   aggregate_func: max
      #   lower_bound: 0
      #   line_width: 2
      #   line_color: var(--custom-color-red)
      #   show:
      #     extrema: true
      #     name: true
      #     icon: true
      #     average: false
      #     state: true
  - type: vertical-stack
    cards:
      - type: custom:swipe-card
        parameters:
          autoHeight: true
          pagination:
            type: 'bullets'
        cards:
          - type: custom:mini-graph-card
            name: Server Load
            entities:
              - entity: sensor.load_1m
                name: 1 min load
              - entity: sensor.load_5m
                name: 5 min load
              - entity: sensor.load_15m
                name: 15 min load
              - entity: sensor.nighttime_number
                color: var(--custom-color-gray)
                show_line: false
                show_points: false
                show_legend: false
                y_axis: secondary
            hours_to_show: 24
            hour24: true
            smoothing: true
            points_per_hour: 12  # every 5 min
            line_width: 2
            show:
              extrema: true
              average: true
          - type: custom:mini-graph-card
            name: Server Memory
            entities:
              - entity: sensor.memory_use_percent
                name: Memory Usage
              - entity: sensor.nighttime_number
                color: var(--custom-color-gray)
                show_line: false
                show_points: false
                show_legend: false
                y_axis: secondary
            lower_bound: 0
            upper_bound: 100
            hours_to_show: 24
            hour24: true
            smoothing: true
            points_per_hour: 12  # every 5 min
            line_width: 2
            show:
              extrema: true
              average: true
      - type: entities
        show_header_toggle: false
        entities:
          - binary_sensor.remote_ui
          - sensor.disk_use_percent
          - sensor.memory_use_percent
          - sensor.processor_use
          - sensor.load_1m
          - sensor.server_cpu_temp
          - sensor.network_throughput_in_enp3s0
          - sensor.network_throughput_out_enp3s0
          - entity: sensor.last_backup
            card_mod:
              style:
                hui-generic-entity-row:
                  $:
                    state-badge:
                      $:
                        ha-state-icon:
                          $:
                            ha-icon:
                              $: |
                                ha-svg-icon {
                                  color: {{ "var(--custom-color-red)" if not is_state('binary_sensor.no_recent_backup', 'off') }};
                                }
                    .: |
                      .info {
                        color: {{ "var(--custom-color-red)" if not is_state('binary_sensor.no_recent_backup', 'off') }};
                      }
          - sensor.db_size
          - entity: sensor.home_assistant_server_battery
            name: Server battery
          - entity: sensor.home_assistant_server_battery_status
            name: Battery status
          # todo: - binary_sensor.rpi_power_status
          - sensor.last_boot
      - type: history-graph
        hours_to_show: 24
        entities:
          - entity: binary_sensor.remote_ui
      - type: entities
        show_header_toggle: false
        entities:
          - type: divider
          - sensor.mqtt_broker_sent_messages_1min_load
          - sensor.mqtt_broker_received_messages_1min_load
          - binary_sensor.solarassistant_bridge
          - binary_sensor.solarassistant_activity
        header:
          type: custom:mini-graph-card
          name: MQTT
          icon: mdi:email-multiple-outline
          entities:
            - entity: sensor.mqtt_broker_sent_messages_1min_load
              name: Sent
            - entity: sensor.mqtt_broker_received_messages_1min_load
              name: Received
            - entity: sensor.nighttime_number
              color: var(--custom-color-gray)
              show_line: false
              show_points: false
              show_legend: false
              y_axis: secondary
          hours_to_show: 24
          hour24: true
          smoothing: true
          points_per_hour: 12  # every 5 min
          line_width: 2
          show:
            extrema: true
            average: true
          card_mod:
            style:
              .: |
                ha-card {
                  border: 0px;
                }
      - type: history-graph
        hours_to_show: 24
        entities:
          - entity: binary_sensor.solarassistant_bridge
            name: SA Bridge
          - entity: binary_sensor.solarassistant_activity
            name: SA Activity
      - type: custom:mini-graph-card
        name: Foyer Security Camera
        entities:
          - entity: sensor.server_cpu_temp
            name: CPU
            color: var(--custom-color-red)
          - entity: sensor.conditions_temperature
            name: External
            color: var(--custom-color-yellow)
          - entity: sensor.nighttime_number
            color: var(--custom-color-gray)
            show_line: false
            show_points: false
            show_legend: false
            y_axis: secondary
        hours_to_show: 24
        hour24: true
        smoothing: true
        points_per_hour: 12  # every 5 min
        line_width: 2
        show:
          extrema: true
          average: true
      - type: custom:mini-graph-card
        name: Backup Power System
        icon: mdi:thermometer
        entities:
          - entity: sensor.inverter_temperature
            name: Inverter
            color: var(--custom-color-red)
          - entity: sensor.battery_temperature
            name: Battery
            color: var(--custom-color-yellow)
          - entity: sensor.cabinet_temperature
            name: Cabinet
            color: var(--custom-color-magenta)
          - entity: sensor.nighttime_number
            color: var(--custom-color-gray)
            show_line: false
            show_points: false
            show_legend: false
            y_axis: secondary
        hours_to_show: 24
        hour24: true
        lower_bound: 0
        smoothing: true
        points_per_hour: 12
        line_width: 2
        show:
          extrema: true
          name: true
          icon: true
          average: true
          state: true
          labels_secondary: false