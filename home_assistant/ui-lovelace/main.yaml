path: main
title: Main
icon: mdi:home
badges:
  - entity: binary_sensor.updater
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $:
                .value: |
                    ha-icon {
                      color: {{ "var(--state-icon-active-color)" if is_state(config.entity, 'on') }} !important;
                    }
  - entity: binary_sensor.motion_detected
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $:
                .value: |
                    ha-icon {
                      color: {{ "var(--state-icon-active-color)" if is_state(config.entity, 'on') }} !important;
                    }
  - entity: person.pieter_rautenbach
  - entity: person.rouve_rautenbach
  - entity: binary_sensor.electricity_feed
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $:
                .value: |
                    ha-icon {
                      color: {{ "var(--state-icon-active-color)" if is_state(config.entity, 'on') }} !important;
                    }
  - entity: binary_sensor.internet_connection
    card_mod:
      style:
        ha-state-label-badge:
          $:
            ha-label-badge:
              $:
                .value: |
                    ha-icon {
                      color: {{ "var(--state-icon-active-color)" if is_state(config.entity, 'on') }} !important;
                    }
cards:
  - type: vertical-stack
    cards:
      - type: horizontal-stack
        title: Main Bedroom
        cards:
          # todo: light profiles/scenes
          - type: custom:button-card
            template: smart_bulb_light
            name: Pieter's Side
            entity: light.smart_bulb_1
            icon: mdi:lamp
          - type: custom:button-card
            name: Tivoli
            entity: switch.smart_plug_1
            size: 20%
            show_label: true
            # the label plus the label colour is a hack to create a phantom space
            label: >
              [[[
                return '_';
              ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              label:
                - color: var(--primary-background-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"l" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            hold_action:
              action: more-info
              haptic: selection
          - type: custom:button-card
            template: smart_bulb_light
            name: RouvÃ©'s Side
            entity: light.smart_bulb_2
            icon: mdi:lamp
      - type: horizontal-stack
        title: Inside Lights
        cards:
          - type: custom:button-card
            template: smart_bulb_light
            name: Foyer
            entity: light.foyer_light
            icon: mdi:dome-light
            styles:
              grid:
                - grid-template-areas: '"t s l" "i i i" "n n n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr min-content 1fr
              name:
                - margin-top: -1px
                - margin-bottom: 0px
              label:
                - align-self: middle
                - justify-self: start
                - padding-right: 1ex
              custom_fields:
                s:
                  - color: var(--paper-item-icon-color)
                t:
                  - align-self: middle
                  - justify-self: end
                  - padding-right: 1ex
            custom_fields:
              s: >
                [[[ return '/' ]]]
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.foyer_light_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - margin-bottom: -1px
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - color: >
                          [[[
                            if (states['timer.foyer_light_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              haptic: light
              action: call-service
              service: script.toggle_light
              service_data:
                light: light.foyer_light
                profile: normal
            double_tap_action:
              haptic: medium
              action: call-service
              service: script.toggle_light
              service_data:
                light: light.foyer_light
                profile: night
            hold_action:
              haptic: selection
              action: more-info
          - type: custom:button-card
            name: Living Room
            entity: light.living_room_lamp
            size: 20%
            color: var(--button-card-light-color)
            custom_fields:
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.living_room_lamp_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - margin-top: -1ex
                      - margin-bottom: -1ex
                      - color: >
                          [[[
                            if (states['timer.living_room_lamp_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              label:
                - color: var(--primary-background-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"t" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            double_tap_action:
              action: call-service
              haptic: medium
              service: script.turn_on_light_and_timer
              service_data:
                light: "[[[ return entity.entity_id; ]]]"
                duration: "03:00:00"
            hold_action:
              action: more-info
              haptic: selection
          - type: custom:button-card
            template: smart_bulb_light
            name: Dining Room
            entity: light.smart_bulb_3
            icon: mdi:dome-light
      - type: horizontal-stack
        title: Outside Lights
        cards:
          - type: custom:button-card
            name: Front Door
            entity: light.front_door_light
            size: 20%
            color: var(--button-card-light-color)
            styles:
              name:
                - color: var(--paper-item-icon-color)
              label:
                - color: var(--primary-background-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"t" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            custom_fields:
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.front_door_light_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - margin-top: -1ex
                      - margin-bottom: -1ex
                      - color: >
                          [[[
                            if (states['timer.front_door_light_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            double_tap_action:
              action: call-service
              haptic: medium
              service: script.turn_on_light_and_timer
              service_data:
                light: "[[[ return entity.entity_id; ]]]"
                duration: "03:00:00"
            hold_action:
              action: more-info
              haptic: selection
          - type: custom:button-card
            name: Garage
            entity: light.garage_light
            size: 20%
            color: var(--button-card-light-color)
            show_label: true
            label: >
              [[[
                return '_';
              ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              label:
                - color: var(--primary-background-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"l" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            hold_action:
              action: more-info
              haptic: selection
          - type: custom:button-card
            name: Backyard
            entity: light.backyard_light
            size: 20%
            color: var(--button-card-light-color)
            show_label: true
            label: >
              [[[
                return '_';
              ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              label:
                - color: var(--primary-background-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"l" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            state:
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            hold_action:
              action: more-info
              haptic: selection
      - type: vertical-stack
        title: Entertainment
        cards:
          - type: custom:mini-media-player
            name: Living Room
            entity: media_player.living_room_universal
            artwork: cover
            volume_stateless: true
            hide:
              power: true
              volume: false
              mute: true
            idle_view:
              when_idle: false
              when_paused: false
              when_standby: false
            background: '/local/apple_tv.jpg'
            shortcuts:
              columns: 5
              buttons:
                - type: script
                  icon: mdi:apple
                  id: script.entertainment_apple_tv_on
                - type: script
                  icon: mdi:set-top-box
                  id: script.entertainment_satellite_on
                - type: script
                  icon: mdi:palm-tree
                  id: script.play_radio_paradise
                - type: script
                  icon: mdi:white-balance-sunny
                  id: script.hk_3380_dimmer
                - type: script
                  icon: mdi:power
                  id: script.entertainment_off
          - type: custom:mini-media-player
            name: Main Bedroom
            entity: media_player.main_bedroom_universal
            artwork: cover
            volume_stateless: true
            toggle_power: false  # make it use turn_on/turn_off
            hide:
              power: false
              power_state: false
              volume: false
              mute: true
            idle_view:
              when_idle: false
              when_paused: false
              when_standby: false
            background: '/local/tivoli-model-three.png'
      - type: entities
        title: Electricity Consumption
        show_header_toggle: false
        entities:
          - entity: sensor.daily_power_consumption
            name: Today
            icon: mdi:power-plug
          - entity: sensor.monthly_power_consumption
            name: This Month
            icon: mdi:power-plug
          - entity: sensor.monthly_power_consumption_forecast
            name: This Month's Forecast
            icon: mdi:trending-up
        footer:
          type: custom:mini-graph-card
          entities:
            - entity: sensor.current_power
          hours_to_show: 24
          hour24: true
          smoothing: true
          points_per_hour: 12  # every 5 min
          line_width: 2
          line_color: var(--custom-graph-color-red)
          show:
            extrema: true
            name: false
            icon: false
            average: true
            state: true
  - type: vertical-stack
    cards:
      - type: horizontal-stack
        title: "Entry & Access"
        cards:
          - type: custom:button-card
            name: RouvÃ©
            entity: cover.lhs_garage_door
            size: 20%
            show_name: true
            color_type: icon
            color: var(--paper-item-icon-color)
            state:
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.lhs_garage_occupied'].state == 'on'
                  ]]]
                color: var(--paper-item-icon-active-color)
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.lhs_garage_occupied'].state == 'off'
                  ]]]
                color: var(--paper-item-icon-color)
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.lhs_garage_occupied'].state == 'unavailable'
                  ]]]
                color: var(--state-icon-unavailable-color)
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            custom_fields:
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.lhs_garage_door_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - margin-top: -1ex
                      - margin-bottom: -1ex
                      - color: >
                          [[[
                            if (states['timer.lhs_garage_door_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"t" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            tap_action:
              action: toggle
              haptic: light
            double_tap_action:
              action: call-service
              haptic: medium
              service: script.close_garage_door_and_main_gate
              service_data:
                garage_door: "[[[ return entity.entity_id; ]]]"
            hold_action:
              action: call-service
              haptic: heavy
              service: timer.start
              service_data:
                entity_id: timer.lhs_garage_door_timer
                duration: "00:10:00"
          - type: custom:button-card
            name: Gate
            entity: cover.main_gate
            size: 20%
            show_name: true
            color_type: icon
            color: var(--paper-item-icon-color)
            custom_fields:
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.main_gate_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - margin-top: -1ex
                      - margin-bottom: -1ex
                      - color: >
                          [[[
                            if (states['timer.main_gate_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"t" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            state:
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.gate_status'].state == 'unavailable'
                  ]]]
                color: var(--state-icon-unavailable-color)
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            tap_action:
              action: toggle
              haptic: light
            double_tap_action:
              action: call-service
              haptic: medium
              service: script.turn_on
              service_data:
                entity_id: script.open_pedestrian_gap
            hold_action:
              action: call-service
              haptic: heavy
              service: timer.start
              service_data:
                entity_id: timer.main_gate_timer
                duration: "00:10:00"
          - type: custom:button-card
            name: Pieter
            entity: cover.rhs_garage_door
            size: 20%
            show_name: true
            color_type: icon
            color: var(--paper-item-icon-color)
            state:
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.rhs_garage_occupied'].state == 'on'
                  ]]]
                color: var(--paper-item-icon-active-color)
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.rhs_garage_occupied'].state == 'off'
                  ]]]
                color: var(--paper-item-icon-color)
              - operator: template
                value: >
                  [[[
                    return states['binary_sensor.rhs_garage_occupied'].state == 'unavailable'
                  ]]]
                color: var(--state-icon-unavailable-color)
              - value: 'unavailable'
                styles:
                  icon:
                    - color: var(--state-icon-unavailable-color)
            custom_fields:
              t:
                card:
                  type: custom:button-card
                  name: Timer
                  entity: timer.rhs_garage_door_timer
                  show_name: false
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - font-size: 12px
                      - box-shadow: none
                    state:
                      - margin-top: -1ex
                      - margin-bottom: -1ex
                      - color: >
                          [[[
                            if (states['timer.rhs_garage_door_timer'].state == 'idle')
                              return "var(--paper-item-icon-color)";
                            else
                              return "red";
                          ]]]
            styles:
              name:
                - color: var(--paper-item-icon-color)
              card:
                - font-size: 12px
              grid:
                - grid-template-areas: '"t" "i" "n"'
                - grid-template-rows: min-content 1fr min-content
                - grid-template-columns: 1fr
            tap_action:
              action: toggle
              haptic: light
            double_tap_action:
              action: call-service
              haptic: medium
              service: script.close_garage_door_and_main_gate
              service_data:
                # https://community.home-assistant.io/t/problem-passing-variable-from-automation-to-script/134989/5
                # https://community.home-assistant.io/t/lovelace-button-card/65981/1063
                # https://community.home-assistant.io/t/tap-action-script-variable/124023
                # https://community.home-assistant.io/t/passing-a-variable-to-a-script-in-lovelace-with-entity-button/155935
                # https://community.home-assistant.io/t/passing-variable-from-entity-button-script-shell-command/178570
                garage_door: "[[[ return entity.entity_id; ]]]"
            hold_action:
              action: call-service
              haptic: heavy
              service: timer.start
              service_data:
                entity_id: timer.rhs_garage_door_timer
                duration: "00:10:00"
      - type: history-graph
        title: Who's Home?
        hours_to_show: 24
        entities:
          - entity: binary_sensor.anybody_home
            name: Anybody
          - entity: binary_sensor.pieter_present
            name: Pieter
          - entity: binary_sensor.rouve_present
            name: RouvÃ©
          - entity: binary_sensor.tenant_present
            name: Tenant
          - entity: binary_sensor.housekeeper_present
            name: Housekeeper
          - entity: binary_sensor.contractor_mode
            name: Contractors
          - entity: switch.guest_mode
            name: Guests
      - type: entities
        title: Special Modes
        entities:
          - switch.guest_mode
          - switch.contractor_mode
        show_header_toggle: false
      - type: custom:mini-graph-card
        name: Driving â Takealot HQ to Home
        # name: Current Travel Time
        icon: mdi:briefcase-clock
        entities:
          - entity: sensor.google_travel_time_driving
        hours_to_show: 24
        hour24: true
        smoothing: true
        points_per_hour: 4  # every 15 min
        line_width: 2
        line_color: var(--custom-graph-color-blue)
        show:
          extrema: true
      - type: horizontal-stack
        title: Clocks
        cards:
          - type: custom:button-card
            template: clock
            variables:
              timezone: Africa/Johannesburg
            name: Cape Town
            entity: sensor.cape_town
          - type: custom:button-card
            template: clock
            variables:
              timezone: Europe/London
            name: London
            entity: sensor.london
          - type: custom:button-card
            template: clock
            variables:
              timezone: America/Los_Angeles
            name: San Francisco
            entity: sensor.san_francisco
          - type: custom:button-card
            template: clock
            variables:
              timezone: Australia/Sydney
            name: Sydney
            entity: sensor.sydney
      - type: entities
        title: Schedule
        show_header_toggle: false
        entities:
          - entity: input_datetime.wake_up_time
            name: Wake-up Time
          - entity: input_datetime.vacation_start
            name: Vacation Start
          - entity: input_datetime.vacation_end
            name: Vacation End
          - entity: binary_sensor.workday
            name: Workday
      - type: custom:atomic-calendar-revive
        entities:
          - entity: calendar.vacation
            icon: mdi:palm-tree
          - entity: calendar.housekeeping
            icon: mdi:account-hard-hat
  - type: vertical-stack
    cards:
    - type: custom:weather-card
      name: Stellies
      entity: weather.home_hourly
      current: true
      details: true
      forecast: true
      hourly_forecast: true
      number_of_forecasts: 5  # hours
    - type: custom:weather-card
      entity: weather.home
      current: false
      details: false
      forecast: true
      number_of_forecasts: 5  # days
    - type: history-graph
      hours_to_show: 72
      entities:
        - entity: weather.home
          name: Today
        - entity: sensor.weather_forecast_conditions_tomorrow
          name: Tomorrow
    - type: custom:mini-graph-card
      name: Home
      entities:
        - entity: sensor.conditions_temperature
          name: Inside Temperature
          color: var(--custom-graph-color-yellow)
        - entity: sensor.outside_temperature
          name: Outside Temperature
          color: var(--custom-graph-color-red)
        - entity: sensor.conditions_humidity
          name: Inside Humidity
          color: var(--custom-graph-color-blue)
          y_axis: secondary
      hours_to_show: 24
      hour24: true
      smoothing: true
      points_per_hour: 2  # every 30 min
      line_width: 2
      show:
        extrema: true
    - type: custom:mini-graph-card
      entities:
        # sensor.sun_illuminance can be very unreliable (operationally); need to use my own light meter
        # - entity: sensor.sun_illuminance
        #   color: var(--custom-graph-color-yellow)
        - entity: sensor.illuminance
          # don't use this if you want to use thresholds: color overrides
          color: var(--custom-graph-color-yellow)
        - entity: sensor.solar_angle
          color: var(--custom-graph-color-red)
          y_axis: secondary
      hours_to_show: 24
      hour24: true
      smoothing: true
      points_per_hour: 12  # every 5 min
      line_width: 2
      show:
        extrema: true
      # color_thresholds:
      #   # https://community.home-assistant.io/t/outdoor-illuminance-template-sensor/228581
      #   - value: 10  # min
      #     color: var(--custom-graph-color-gray)
      #   - value: 10000  # max
      #     color: var(--custom-graph-color-yellow)
    - type: history-graph
      title: Low Light Sensor
      hours_to_show: 24
      entities:
        - entity: binary_sensor.low_light
          name: Low Light
